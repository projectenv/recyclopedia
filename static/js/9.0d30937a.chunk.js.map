{"version":3,"sources":["pages/RecyclingBin/RecyclingBinPage.module.scss","pages/RecyclingBin/RecyclingBin.tsx"],"names":["module","exports","DaysLeft","value","statusBg","backgroundColor","className","styles","daysLeft","style","RecyclingBin","articlesData","useAppSelector","selectArticlesData","dispatch","selectLoginType","useAppDispatch","history","useHistory","id","recyclingBin","recycledArticles","length","emptyMsg","map","name","pendingDaysUntilDeletion","content","to","validPageLink","styledAs","onClick","a","confirm","restoreArticle","push","deleteArticle"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,aAAe,uCAAuC,SAAW,mCAAmC,SAAW,mCAAmC,iBAAmB,6C,kJCevL,SAASC,EAAT,GAAwC,IAApBC,EAAmB,EAAnBA,MACZC,EAAW,CACfC,gBACMF,GAAS,EACJ,MACEA,GAAS,GACX,SAEF,eAIX,OACE,mCACE,uBACEG,UAAWC,IAAOC,SAClBC,MAAOL,EAFT,UAIGD,EAJH,kBAsESO,UA1Df,WACE,IAAMC,EAAeC,YAAeC,KAE9BC,GADmBF,YAAeG,KACvBC,eACXC,EAAUC,cAEhB,OACE,sBAAKC,GAAIZ,IAAOa,aAAhB,UACE,8DACA,mLAK4C,IAAzCT,EAAaU,iBAAiBC,OAC7B,mBAAGH,GAAIZ,IAAOgB,SAAd,yCAIA,qBAAKJ,GAAIZ,IAAOc,iBAAhB,SACGV,EAAaU,iBAAiBG,KAAI,gBAAGC,EAAH,EAAGA,KAAeC,GAAlB,EAASC,QAAT,EAAkBD,0BAAlB,OACjC,gCACE,cAAC,IAAD,CAAME,GAAI,uBAAyBC,YAAcJ,GAAjD,SACGA,IAEH,gCACE,cAACvB,EAAD,CAAUC,MAAOuB,IACjB,cAAC,IAAD,CACEI,SAAS,OACTC,QAAO,sBAAE,sBAAAC,EAAA,0DACHC,QAAQ,wCADL,gCAECnB,EAASoB,YAAeT,IAFzB,OAGLR,EAAQkB,KAAKN,YAAcJ,IAHtB,2CAFX,qBAWA,cAAC,IAAD,CACEK,SAAS,cACTC,QAAS,WACHE,QAAQ,sCACVnB,EAASsB,YAAcX,IACvBR,EAAQkB,KAAK,OALnB,yBAjBMV","file":"static/js/9.0d30937a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"recyclingBin\":\"RecyclingBinPage_recyclingBin__2aYt0\",\"emptyMsg\":\"RecyclingBinPage_emptyMsg__2Lbka\",\"daysLeft\":\"RecyclingBinPage_daysLeft__3hBbj\",\"recycledArticles\":\"RecyclingBinPage_recycledArticles__8rePi\"};","import styles from \"pages/RecyclingBin/RecyclingBinPage.module.scss\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { useAppSelector, useAppDispatch } from \"app/hooks\";\nimport { selectArticlesData, deleteArticle, restoreArticle } from \"app/articlesSlice\";\nimport { LoginType, selectLoginType } from \"app/adminSlice\";\n\nimport { validPageLink, dictionaryUpdateKey } from \"utils/functions\";\nimport Button from \"components/UI/Button\";\n\n\n// little filler component as to not complict the RecyclingBin\ntype DaysLeft = {\n  value: number,\n};\n\nfunction DaysLeft({ value }: DaysLeft) {\n  const statusBg = {\n    backgroundColor: function () {\n      if (value <= 5) {\n        return \"red\";\n      } else if (value <= 15) {\n        return \"yellow\";\n      }\n      return \"transparent\";\n    }()\n  };\n\n  return (\n    <>\n      <span\n        className={styles.daysLeft}\n        style={statusBg}\n      >\n        {value} Days Left\n      </span>\n    </>\n  );\n}\n\n\n// No admin check required. Things will already die here.\nfunction RecyclingBin() {\n  const articlesData = useAppSelector(selectArticlesData);\n  const currentLoginType = useAppSelector(selectLoginType);\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n\n  return (\n    <div id={styles.recyclingBin}>\n      <h2>Welcome to the Recycling Bin</h2>\n      <p>\n        This is where articles go to die! If you&apos;ve accidently deleted an article. You can recover them here! Or you can dispose of them permenantly here!\n      </p>\n\n      {\n        (articlesData.recycledArticles.length === 0) ? (\n          <p id={styles.emptyMsg}>\n            The Recycling Bin is Empty!\n          </p>\n        ) : (\n          <div id={styles.recycledArticles}>\n            {articlesData.recycledArticles.map(({ name, content, pendingDaysUntilDeletion }) => (\n              <div key={name}>\n                <Link to={\"/admin/recycling_bin\" + validPageLink(name)}>\n                  {name}\n                </Link>\n                <div>\n                  <DaysLeft value={pendingDaysUntilDeletion} />\n                  <Button\n                    styledAs=\"oval\"\n                    onClick={async () => {\n                      if (confirm(\"Do you want to restore this article?\")) {\n                        await dispatch(restoreArticle(name));\n                        history.push(validPageLink(name));\n                      }\n                    }}\n                  >\n                    Restore\n                  </Button>\n                  <Button\n                    styledAs=\"oval-danger\"\n                    onClick={() => {\n                      if (confirm(\"Permenantly delete this article?\")) {\n                        dispatch(deleteArticle(name));\n                        history.push(\"/\");\n                      }\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </div>\n              </div>\n            ))}\n          </div>\n        )\n      }\n    </div>);\n}\n\nexport default RecyclingBin;\n"],"sourceRoot":""}