{"version":3,"sources":["components/Form/Form.tsx","components/Form/Form.module.scss","components/UI/CheckboxButton.tsx","components/UI/CheckboxButton.module.scss","components/UI/Collapsible.tsx","components/UI/Collapsible.module.scss","components/Comment/CommentSection.module.scss","components/Comment/Comment.module.scss","components/Article/FloatingSocialMenu.module.scss","components/Article/MediaShareBtns.module.scss","components/UI/CheckboxCounterBtn.module.scss","components/Article/TableOfContents.module.scss","components/Article/TagViews.module.scss","components/Comment/Comment.tsx","components/Comment/CommentSection.tsx","components/Article/MediaShareBtns.tsx","components/UI/CheckboxCounterBtn.tsx","components/Article/FloatingSocialMenu.tsx","components/Article/TableOfContents.tsx","components/Article/TagViews.tsx","components/Article/Article.tsx"],"names":["Form","submitFn","inputItems","children","className","props","defaultItems","Object","assign","entries","map","name","value","defaultValue","useState","input","setInput","changeHandler","e","target","submitHandler","a","preventDefault","cn","styles","form","onSubmit","inputs","idx","module","exports","CheckedBoxButton","forwardRef","ref","styledAs","checked","button","default","type","htmlFor","Collapsible","header","centered","collapsed","isCollapsed","setIsCollapsed","collapsibleContainer","collapsibleTitle","onClick","Comment","comment","parentId","user","commenterAvatar","avatar","commenterUserName","commentUser","src","alt","formatDistance","createdAt","Date","commentContent","content","commentControls","Button","likeCount","dislikeCount","TopLevelComment","commentId","replies","reply","index","CommentSection","comments","commentSection","commentForm","placeholder","option","console","log","commentSectionContent","MediaShareBtns","title","articleUrl","location","href","quote","shareBtns","FacebookShareButton","url","hashtag","FacebookIcon","TwitterShareButton","hashtags","TwitterIcon","RedditShareButton","RedditIcon","copyLinkBtn","navigator","clipboard","writeText","btn","innerHTML","classList","add","clicked","setTimeout","remove","CheckboxCounterBtn","materialIcon","counter","checkboxCounterBtn","CheckboxButton","FloatingSocialMenu","commentSectionRef","expandShare","setExpandShare","likeBtnRef","useRef","dislikeBtnRef","handleVote","likeBtn","current","dislikeBtn","floatingSocialMenu","onChange","posY","getBoundingClientRect","top","window","pageYOffset","scrollTo","behavior","TableOfContents","sectionHeaders","length","tableOfContents","level","text","style","marginLeft","TagViews","PageViewType","tags","tagView","tag","ArticleComponent","article","inRecycling","history","useHistory","dispatch","useAppDispatch","isAdmin","useAppSelector","selectLoginType","LoginType","Admin","dateCreated","dateModified","migrationTitleName","updateMigrationTitleName","Reading","lastViewType","updateLastViewType","viewType","updateViewType","processedMarkdown","preprocessMarkdown","updateComments","commentPinger","toggleView","useEffect","getCommentsOfArticle","retrievedComments","standardAdminControls","Editting","Migration","recyclingAdminControls","confirm","restoreArticle","push","validPageLink","id","articleControls","deleteArticle","bannerImage","Banner","dateView","format","headers","MarkdownRender","processed","currentArticle","Input","label","alert","migrateArticle","newName","payload"],"mappings":"0NAqEeA,IA9Df,YAaG,IAVDC,EAUA,EAVAA,SACAC,EASA,EATAA,WACAC,EAQA,EARAA,SACAC,EAOA,EAPAA,UACGC,EAMH,gEAEMC,EAAeC,OAAOC,OAC1BD,OAAOE,QAAQP,GAAYQ,KAAI,mCAAEC,EAAF,KAAQC,EAAR,2BAC5BD,EAAOC,EAAMC,cAAgB,QAJlC,EAQ0BC,mBAASR,GARnC,mBAQOS,EARP,KAQcC,EARd,KAUMC,EAA+B,SAACC,GAAO,IAAD,EAClBA,EAAEC,OAAlBR,EADkC,EAClCA,KAAMC,EAD4B,EAC5BA,MAEdI,EAAS,2BACJD,GADG,kBAELJ,EAAOC,MAINQ,EAAa,uCAAG,WAAOF,GAAP,SAAAG,EAAA,6DACpBH,EAAEI,iBADkB,gBAEdrB,QAFc,IAEdA,OAFc,EAEdA,EAAWc,GAFG,OAGpBC,EAASV,GAHW,2CAAH,sDAMnB,OACE,+CACEF,UAAWmB,IAAGC,IAAOC,KAAMrB,GAC3BsB,SAAUN,GACNf,GAHN,cAKE,qBAAKD,UAAWoB,IAAOG,OAAvB,SAEIpB,OAAOE,QAAQP,GAAYQ,KAAI,WAAgBkB,GAAhB,uBAAEjB,EAAF,KAAQC,EAAR,YAC7B,cAAC,IAAD,aAEEK,cAAeA,EACfN,KAAMA,EACNC,MAAOG,EAAMJ,IACTC,GAJCgB,QASZzB,Q,oBC/DP0B,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,uB,qGCY/CC,EAAmBC,sBACvB,WASEC,GACC,IARCtB,EAQF,EAREA,KACAuB,EAOF,EAPEA,SACAC,EAMF,EANEA,QACAhC,EAKF,EALEA,SACAC,EAIF,EAJEA,UACGC,EAGL,oEACA,OACE,sBACED,UAAWmB,IACTC,IAAOY,OACPF,EAAWV,IAAOU,GAAYV,IAAOa,QACrCjC,GAJJ,UAOE,mCACE6B,IAAKA,EACLK,KAAK,WACL1B,MAAOD,EACPwB,QAASA,GACL9B,IAEN,uBAAOkC,QAAS5B,EAAhB,SAAuBR,UAMhB4B,O,oBC7CfF,EAAOC,QAAU,CAAC,OAAS,+BAA+B,QAAU,gCAAgC,OAAS,iC,qHC+C9FU,IA5Cf,YAaG,IAZDC,EAYA,EAZAA,OAYA,IAXAC,gBAWA,aAVAC,iBAUA,SATAxC,EASA,EATAA,SACAC,EAQA,EARAA,UACGC,EAOH,0EACsCS,mBAAS6B,GAD/C,mBACOC,EADP,KACoBC,EADpB,KAGA,OACE,8CACEzC,UAAWmB,IAAGC,IAAOsB,qBAAsB1C,IACvCC,GAFN,cAIE,sBACED,UAAWmB,IAAGC,IAAOuB,iBAAR,eACVvB,IAAOkB,SAAWA,IAErBM,QAAS,kBACPH,GAAe,SAACD,GAAD,OAAkBA,MALrC,UAQE,4BAAIH,IACJ,qBACErC,UAAWmB,IAAG,iBAAD,eACVC,IAAOmB,UAAYC,IAFxB,6BASCA,GAAgBzC,Q,oBC1CzB0B,EAAOC,QAAU,CAAC,qBAAuB,0CAA0C,iBAAmB,sCAAsC,UAAY,+BAA+B,SAAW,gC,oBCAlMD,EAAOC,QAAU,CAAC,eAAiB,uCAAuC,YAAc,oCAAoC,sBAAwB,gD,oBCApJD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,eAAiB,gCAAgC,gBAAkB,mC,oBCAnKD,EAAOC,QAAU,CAAC,mBAAqB,iD,oBCAvCD,EAAOC,QAAU,CAAC,UAAY,kCAAkC,YAAc,oCAAoC,QAAU,kC,oBCA5HD,EAAOC,QAAU,CAAC,mBAAqB,iD,oBCAvCD,EAAOC,QAAU,CAAC,gBAAkB,2C,oBCApCD,EAAOC,QAAU,CAAC,QAAU,4B,gQCsB5B,SAASmB,EAAT,GAgBI,IAfFC,EAeC,EAfDA,QAUA/C,GAKC,EAdDgD,SAcC,EALDhD,UAKC,EAII+C,EAAQE,KAAQ,CACnBC,gBAAiBH,EAAQE,KAAKE,OAC9BC,kBAAmBL,EAAQE,KAAKzC,MAC9B,CAEF0C,gBAAiB,+FACjBE,kBAAmB,aARnBF,EAFD,EAECA,gBACAE,EAHD,EAGCA,kBAUF,OACE,sBAAKnD,UAAWoB,IAAO0B,QAAvB,UACE,sBAAK9C,UAAWoB,IAAOgC,YAAvB,UACE,qBAAKC,IAAKJ,EAAiBK,IAAKH,IAChC,gCACE,4BAAIA,IACJ,8BACGI,YAAeT,EAAQU,UAAW,IAAIC,MADzC,gBAMJ,qBAAKzD,UAAWoB,IAAOsC,eAAvB,SACGZ,EAAQa,UAGX,sBAAK3D,UAAWoB,IAAOwC,gBAAvB,UACE,eAACC,EAAA,EAAD,CAAQ/B,SAAS,OAAjB,UACE,sBAAM9B,UAAU,iBAAhB,sBAGC8C,EAAQgB,aAEX,eAACD,EAAA,EAAD,CAAQ/B,SAAS,OAAjB,UACE,sBAAM9B,UAAU,iBAAhB,wBAGC8C,EAAQiB,gBAEX,eAACF,EAAA,EAAD,CAAQ/B,SAAS,OAAjB,UACE,sBAAM9B,UAAU,iBAAhB,qBADF,cAODD,KAuBQiE,MAlBf,YAMI,IALFlB,EAKC,EALDA,QACAmB,EAIC,EAJDA,UAKA,OACE,cAACpB,EAAD,CAASC,QAASA,EAAlB,SACE,qCACE,uBACCA,EAAQoB,QAAQ5D,KAAI,SAAC6D,EAAOC,GAAR,OACnB,cAACvB,EAAD,CAAqBE,SAAUkB,EAAWnB,QAASqB,GAArCC,YC9CTC,EAhDQzC,sBACrB,WAIKC,GACF,IAHCyC,EAGF,EAHEA,SACGrE,EAEL,4BACA,OACE,8CACED,UAAWoB,IAAOmD,eAClB1C,IAAKA,GACD5B,GAHN,cAKE,sBAAKD,UAAWoB,IAAOoD,YAAvB,UACE,+CACA,cAAC5E,EAAA,EAAD,CACEE,WAAY,CACVS,KAAM,CACJkE,YAAa,QAEf3B,QAAS,CACP2B,YAAa,UACbC,OAAQ,aAGZ7E,SAAU,SAACc,GACTgE,QAAQC,IAAIjE,EAAMmC,UAXtB,SAcE,cAACe,EAAA,EAAD,CAAQ/B,SAAS,OAAjB,0BAMJ,sBAAK9B,UAAWoB,IAAOyD,sBAAvB,UACE,0CACA,8BACGP,EAAShE,KAAI,SAACwC,EAAStB,GAAV,OACZ,cAAC,EAAD,CAAmByC,UAAWzC,EAAKsB,QAASA,GAA9BtB,kB,mGCkBbsD,MAvDf,YAII,IAHFC,EAGC,EAHDA,MAIMC,EAAaC,SAASC,KACtBC,EAAK,qCAAiCJ,GAI5C,OACE,sBAAK/E,UAAWoB,IAAOgE,UAAvB,UAEE,cAAEC,EAAA,EAAF,CACEC,IAAKN,EACLG,MAAOA,EACPI,QAAQ,cAHV,SAKE,cAACC,EAAA,EAAD,MAEF,cAACC,EAAA,EAAD,CACEH,IAAKN,EACLD,MAAOI,EACPO,SAfW,CAAC,aAAc,gBAAiB,cAAe,aAY5D,SAKE,cAACC,EAAA,EAAD,MAEF,cAACC,EAAA,EAAD,CACEN,IAAKN,EACLD,MAAOI,EAFT,SAIE,cAACU,EAAA,EAAD,MAEF,cAAChC,EAAA,EAAD,CACE/B,SAAS,OACT9B,UAAWoB,IAAO0E,YAAc,kBAChClD,QAAO,uCAAE,WAAO9B,GAAP,eAAAG,EAAA,sEACD8E,UAAUC,UAAUC,UAAUjB,GAD7B,QAEDkB,EAAMpF,EAAEC,QAEVoF,UAAY,OAChBD,EAAIE,UAAUC,IAAIjF,IAAOkF,SAEzBC,YAAW,WACTL,EAAIC,UAAY,OAChBD,EAAIE,UAAUI,OAAOpF,IAAOkF,WAC3B,KAVI,2CAAF,sDAHT,sB,2BCRSG,EA1BY7E,sBACzB,WAMEC,GACC,IALC6E,EAKF,EALEA,aACAC,EAIF,EAJEA,QACG1G,EAGL,0CACA,OACE,sBAAKD,UAAWoB,IAAOwF,mBAAvB,UACE,cAACC,EAAA,EAAD,yBACEhF,IAAKA,EACLC,SAAS,UACL7B,GAHN,aAKE,sBAAMD,UAAU,iBAAhB,SACG0G,OAGL,4BAAIC,UCwDGG,MAhFf,YAUI,IATF/B,EASC,EATDA,MACAgC,EAQC,EARDA,kBACAjD,EAOC,EAPDA,UACAC,EAMC,EANDA,aAMC,EACqCrD,oBAAS,GAD9C,mBACMsG,EADN,KACmBC,EADnB,KAEKC,EAAaC,iBAAyB,MACtCC,EAAgBD,iBAAyB,MAEzCE,EAAa,SACjBvG,GAEA,IAAMwG,EAAUJ,EAAWK,QACrBC,EAAaJ,EAAcG,QAC5BD,GAAYE,IAEZ1G,EAAEC,SAAWuG,GAAaA,EAAQvF,UACrCyF,EAAWzF,SAAU,GAGlBjB,EAAEC,SAAWyG,GAAgBA,EAAWzF,UAC3CuF,EAAQvF,SAAU,KAItB,OACE,sBAAK/B,UAAWoB,IAAOqG,mBAAvB,UACE,cAAC,EAAD,CACE5F,IAAKqF,EACL3G,KAAK,QACLmG,aAAa,WACbC,QAAS7C,EACT4D,SAAU,SAAC5G,GACTuG,EAAWvG,MAGf,cAAC,EAAD,CACEe,IAAKuF,EACL7G,KAAK,WACLmG,aAAa,aACbC,QAAS5C,EACT2D,SAAU,SAAC5G,GACTuG,EAAWvG,MAGbkG,GACA,cAAC,EAAD,CAAgBjC,MAAOA,IAEzB,cAAClB,EAAA,EAAD,CACE/B,SAAS,SACTc,QAAS,WACP,IAAM2B,EAAiBwC,EAAkBQ,QACzC,GAAKhD,EAAL,CAEA,IAAMoD,EAAOpD,EAAeqD,wBAAwBC,IAAMC,OAAOC,YAAc,IAC/ED,OAAOE,SAAS,CAAEH,IAAKF,EAAMM,SAAU,aAP3C,SAUE,sBAAMjI,UAAU,iBAAhB,uBAIF,cAAC6D,EAAA,EAAD,CACE/B,SAAS,SACTc,QAAS,kBAAMqE,GAAgBD,IAFjC,SAIE,sBAAMhH,UAAU,iBAAhB,SACGgH,EAAc,QAAU,gB,2BCpDpBkB,MAxBf,YAAwF,IAA7DC,EAA4D,EAA5DA,eACzB,OAAQA,EAAeC,OAAS,EAC9B,cAAChG,EAAA,EAAD,CACEpC,UAAWoB,IAAOiH,gBAClBhG,OAAO,oBACPC,UAAU,EAHZ,SAKE,8BAEI6F,EAAe7H,KAAI,gBAAGgI,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACjB,mBAAcrD,KAAM,IAAMqD,EAA1B,SACE,oBAAGC,MAAO,CACRC,WAAW,GAAD,OAAmB,GAAbH,EAAQ,GAAd,OADZ,oBAGUC,MAJJA,UAWd,M,mBCNSG,ICQVC,GDRUD,GAjBf,YAAmD,IAA/BE,EAA8B,EAA9BA,KAClB,OACE,qBAAK5I,UAAWoB,KAAOyH,QAAvB,SAEKD,EACC,qCACE,gEACCA,EAAKtI,KAAI,SAACwI,GAAD,OAAS,4BAAcA,GAANA,SAG7B,sE,mBCeLH,O,qBAAAA,I,uBAAAA,I,0BAAAA,Q,KA8LUI,UAnLf,YAAwE,IAA5CC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,YAC7BC,EAAUC,cACVC,EAAWC,cAEXC,EADmBC,YAAeC,OACHC,IAAUC,MAG7CnJ,EAMEyI,EANFzI,KACAoD,EAKEqF,EALFrF,QACAgG,EAIEX,EAJFW,YACAC,EAGEZ,EAHFY,aACA9F,EAEEkF,EAFFlF,UACAC,EACEiF,EADFjF,aAZmE,EAcdrD,mBAASH,GAdK,mBAc9DsJ,EAd8D,KAc1CC,EAd0C,OAgB1BpJ,mBAASiI,GAAaoB,SAhBI,mBAgB9DC,EAhB8D,KAgBhDC,EAhBgD,OAiBlCvJ,mBAASiI,GAAaoB,SAjBY,mBAiB9DG,EAjB8D,KAiBpDC,EAjBoD,KAmB/DC,EAAoBC,YAAmB1G,GAEvCoD,EAAoBI,iBAAuB,MArBoB,EAuBlCzG,mBAAiC,IAvBC,mBAuB9D4D,EAvB8D,KAuBpDgG,EAvBoD,OA4BvC5J,mBAAS,GA5B8B,mBA4B9D6J,EA5B8D,KAwCrE,SAASC,EAAWzJ,GACdmJ,IAAanJ,GACfoJ,EAAepJ,GACfkJ,EAAmBC,IAEnBC,EAAeH,GA7CkD,KAiCrES,qBAAU,WACR,sBAAC,4BAAAxJ,EAAA,sEACiCyJ,YAAqBnK,GADtD,OACOoK,EADP,OAECL,EAAeK,GAFhB,0CAAD,KAIC,CAACJ,IAWJ,IAAMK,GACJ,qCACE,cAAC/G,EAAA,EAAD,CACE/B,SAAS,OACTc,QAAS,kBAAM4H,EAAW7B,GAAakC,WAFzC,4BAMA,cAAChH,EAAA,EAAD,CACEjB,QAAS,kBAAM4H,EAAW7B,GAAamC,YACvChJ,SAAS,OAFX,6BAQEiJ,GACJ,mCACE,cAAClH,EAAA,EAAD,CACE/B,SAAS,OACTc,QAAO,sBAAE,sBAAA3B,EAAA,0DACH+J,QAAQ,wCADL,gCAEC5B,EAAS6B,YAAe1K,IAFzB,OAGL2I,EAAQgC,KAAKC,YAAc5K,IAHtB,2CAFX,+BAcJ,OAAO,qCAEF+I,GACC,sBAAK8B,GAAIhK,IAAOiK,gBAAhB,UACKpC,EAAuC8B,GAAxBH,GAClB,cAAC/G,EAAA,EAAD,CACE/B,SAAS,cACTc,QAAS,WACHoI,QAAS/B,EAAe,mCAAqC,2BAC/DG,EAASkC,YAAc/K,IACvB2I,EAAQgC,KAAK,OALnB,4BAgBJ,WACA,OAAQhB,GACR,KAAKvB,GAAaoB,QAChB,OACE,qCAEE,cAAC,EAAD,CACEhF,MAAOxE,EACPwG,kBAAmBA,EACnBjD,UAAWA,EACXC,aAAcA,KAIf,OAACiF,QAAD,IAACA,OAAD,EAACA,EAASuC,cACT,cAACC,GAAA,EAAD,CAAQD,YAAavC,EAAQuC,cAI/B,qBAAIvL,UAAWoB,IAAO2D,MAAtB,cAA+BxE,EAA/B,OACA,sBAAKP,UAAWoB,IAAOqK,SAAvB,UACE,4CACgBC,YAAO/B,EAAa,2BAElCC,GACA,kDACsB8B,YAAO9B,EAAc,8BAI/C,cAAC,EAAD,CAAiBzB,eAAgBiC,EAAkBuB,UACnD,cAACC,EAAA,EAAD,CAAgB5L,UAAWoB,IAAO4H,QAAlC,SACGoB,EAAkByB,YAErB,cAAC,EAAD,CACEhK,IAAKkF,EACLzC,SAAUA,IAEZ,cAAC,GAAD,CAAUsE,KAAMI,EAAQJ,UAI9B,KAAKD,GAAakC,SAChB,OAAOvB,GAAW,cAACI,EAAA,QAAD,CAAOoC,eAAgB9C,IAE3C,KAAKL,GAAamC,UAChB,OACE,qCACE,gDACA,cAACiB,EAAA,EAAD,CACEC,MAAM,kBACNnL,cAAe,SAACC,GAAD,OAAOgJ,EAAyBhJ,EAAEC,OAAOP,QACxDC,aAAcoJ,EACdrJ,MAAOqJ,IACT,cAAChG,EAAA,EAAD,CAAQjB,QAAO,sBAAE,sBAAA3B,EAAA,yDACf0D,QAAQC,IAAIiF,EAAoBtJ,GAC5BsJ,IAAuBtJ,EAFZ,gBAGb0L,MAAM,0CAHO,sCAKgB7C,EAAS8C,YAAe,CACnD3L,OACA4L,QAAStC,KAPE,cASMuC,SACjBlD,EAAQgC,KAAKC,YAActB,IAVhB,2CAAjB,8BAtDN","file":"static/js/5.d4082602.chunk.js","sourcesContent":["import styles from \"./Form.module.scss\";\nimport { useState } from \"react\";\nimport cn from \"classnames\";\n\nimport Input, { InputOptions, ChangeHandler } from \"./Input\";\n\n\nfunction Form<\n  T extends Record<string, InputOptions>\n>({\n  submitFn,\n  inputItems,\n  children,\n  className,\n  ...props\n}: {\n  submitFn?: (inputItems: Record<keyof T, string>) => void | Promise<void>;\n  inputItems: T;\n  children?: React.ReactNode;\n} & React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLFormElement>, HTMLFormElement>\n) {\n\n  const defaultItems = Object.assign(\n    Object.entries(inputItems).map(([name, value]) => ({\n      [name]: value.defaultValue || \"\"\n    }))\n  );\n\n  const [input, setInput] = useState(defaultItems);\n\n  const changeHandler: ChangeHandler = (e) => {\n    const { name, value } = e.target;\n\n    setInput({\n      ...input,\n      [name]: value\n    });\n  };\n\n  const submitHandler = async (e: React.FormEvent) => {\n    e.preventDefault();\n    await submitFn?.(input);\n    setInput(defaultItems);\n  };\n\n  return (\n    <form\n      className={cn(styles.form, className)}\n      onSubmit={submitHandler}\n      {...props}\n    >\n      <div className={styles.inputs}>\n        {\n          Object.entries(inputItems).map(([name, value], idx) => (\n            <Input\n              key={idx}\n              changeHandler={changeHandler}\n              name={name}\n              value={input[name]}\n              {...value}\n            />\n          ))\n        }\n      </div>\n      {children}\n    </ form>\n  );\n}\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__201Ui\",\"inputs\":\"Form_inputs__2RGHw\"};","import styles from \"./CheckboxButton.module.scss\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\n\n\ntype CheckboxProps = {\n  name: string;\n  styledAs?: \"oval\" | \"circle\";\n  checked?: boolean;\n  onCheck?: (checked: boolean) => void,\n  children: React.ReactNode;\n} & React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\nconst CheckedBoxButton = forwardRef<HTMLInputElement, CheckboxProps>(\n  function CheckedBoxButton(\n    {\n      name,\n      styledAs,\n      checked,\n      children,\n      className,\n      ...props\n    },\n    ref\n  ) {\n    return (\n      <div\n        className={cn(\n          styles.button,\n          styledAs ? styles[styledAs] : styles.default,\n          className\n        )}\n      >\n        <input\n          ref={ref}\n          type=\"checkbox\"\n          value={name}\n          checked={checked}\n          {...props}\n        />\n        <label htmlFor={name}>{children}</label>\n      </div >\n    );\n  }\n);\n\nexport default CheckedBoxButton;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CheckboxButton_button__3sGm8\",\"default\":\"CheckboxButton_default__2RAqr\",\"circle\":\"CheckboxButton_circle__1GmiA\"};","import styles from \"./Collapsible.module.scss\";\nimport { useState } from \"react\";\nimport cn from \"classnames\";\n\nfunction Collapsible({\n  header,\n  centered = false,\n  collapsed = false,\n  children,\n  className,\n  ...props\n}: {\n  header: string | React.ReactNode;\n  collapsed?: boolean;\n  centered?: boolean;\n  children: React.ReactNode;\n} & React.HTMLAttributes<HTMLDivElement>\n) {\n  const [isCollapsed, setIsCollapsed] = useState(collapsed);\n\n  return (\n    <div\n      className={cn(styles.collapsibleContainer, className)}\n      {...props}\n    >\n      <div\n        className={cn(styles.collapsibleTitle, {\n          [styles.centered]: centered\n        })}\n        onClick={() =>\n          setIsCollapsed((isCollapsed) => !isCollapsed)\n        }\n      >\n        <p>{header}</p>\n        <div\n          className={cn(\"material-icons\", {\n            [styles.collapsed]: isCollapsed\n          })}\n        >\n          expand_more\n        </div>\n      </div>\n\n      {(!isCollapsed) && children}\n    </div >\n  );\n}\n\nexport default Collapsible;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"collapsibleContainer\":\"Collapsible_collapsibleContainer__1frp_\",\"collapsibleTitle\":\"Collapsible_collapsibleTitle__2U45i\",\"collapsed\":\"Collapsible_collapsed__3OQ9_\",\"centered\":\"Collapsible_centered__2bh--\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commentSection\":\"CommentSection_commentSection__3DSu0\",\"commentForm\":\"CommentSection_commentForm__3w5Gv\",\"commentSectionContent\":\"CommentSection_commentSectionContent__3tDc2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment\":\"Comment_comment__2Wan6\",\"commentUser\":\"Comment_commentUser__19j4V\",\"commentContent\":\"Comment_commentContent__2nMjH\",\"commentControls\":\"Comment_commentControls__hM516\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"floatingSocialMenu\":\"FloatingSocialMenu_floatingSocialMenu__3IU2W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shareBtns\":\"MediaShareBtns_shareBtns__3oS4c\",\"copyLinkBtn\":\"MediaShareBtns_copyLinkBtn__3jn0n\",\"clicked\":\"MediaShareBtns_clicked__Mjj1S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkboxCounterBtn\":\"CheckboxCounterBtn_checkboxCounterBtn__zZ3p0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableOfContents\":\"TableOfContents_tableOfContents__NsRqp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tagView\":\"TagViews_tagView__32mEr\"};","import styles from \"./Comment.module.scss\";\nimport { formatDistance } from \"date-fns\";\n\nimport Button from \"components/UI/Button\";\n\nexport interface UserModel {\n  name: string;\n  avatar: string;\n}\n\nexport interface CommentModel {\n  user?: UserModel;\n  content: string;\n  createdAt: Date;\n  likeCount: number;\n  dislikeCount: number;\n}\n\nexport type ReplyCommentModel = CommentModel;\nexport interface TopLevelCommentModel extends CommentModel {\n  replies: ReplyCommentModel[];\n}\n\nfunction Comment({\n  comment,\n  parentId, \n  /*\n    When clicking on reply, and forming the message make a dispatch to\n    \n    replyToComment(articleName, parentId)\n\n    This is not here, so an easier method would just be to pass in a submit comment\n    function in the comment section to make things easier.\n  */\n  children\n}: {\n  comment: CommentModel;\n  parentId?: number;\n  children?: React.ReactChild | React.ReactChild[];\n}) {\n  const {\n    commenterAvatar,\n    commenterUserName \n  } = (comment.user) ? {\n    commenterAvatar: comment.user.avatar,\n    commenterUserName: comment.user.name,\n  } : {\n    // TODO find a better icon.\n    commenterAvatar: \"https://lh6.googleusercontent.com/-f9MhM40YFzc/AAAAAAAAAAI/AAAAAAABjbo/iG_SORRy0I4/photo.jpg\",\n    commenterUserName: \"Anonymous\",\n  };\n\n  return (\n    <div className={styles.comment}>\n      <div className={styles.commentUser}>\n        <img src={commenterAvatar} alt={commenterUserName} />\n        <div>\n          <p>{commenterUserName}</p>\n          <p>\n            {formatDistance(comment.createdAt, new Date())} ago\n          </p>\n        </div>\n      </div>\n\n      <div className={styles.commentContent}>\n        {comment.content}\n      </div>\n\n      <div className={styles.commentControls}>\n        <Button styledAs='oval'>\n          <span className='material-icons'>\n            thumb_up\n          </span>\n          {comment.likeCount}\n        </Button>\n        <Button styledAs='oval'>\n          <span className='material-icons'>\n            thumb_down\n          </span>\n          {comment.dislikeCount}\n        </Button>\n        <Button styledAs='oval'>\n          <span className='material-icons'>\n            comment\n          </span>\n          Reply\n        </Button>\n      </div>\n      {children}\n    </div>\n  );\n}\n\nfunction TopLevelComment({\n  comment,\n  commentId,\n}: {\n  comment: TopLevelCommentModel;\n  commentId: number;\n}) {\n  return (\n    <Comment comment={comment}>\n      <>\n        <br></br>\n        {comment.replies.map((reply, index) =>\n          <Comment key={index} parentId={commentId} comment={reply}></Comment>)}\n      </>\n    </Comment>\n  );\n}\n\nexport default TopLevelComment;","import styles from \"./CommentSection.module.scss\";\nimport React, { forwardRef } from \"react\";\n\nimport Form from \"components/Form/Form\";\nimport Button from \"components/UI/Button\";\nimport Comment, { TopLevelCommentModel } from \"./Comment\";\n\ntype CommentSectionProps = {\n  comments: TopLevelCommentModel[];\n} & React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n\nconst CommentSection = forwardRef<HTMLDivElement, CommentSectionProps>(\n  function CommentSection(\n    {\n      comments,\n      ...props\n    }, ref\n  ) {\n    return (\n      <div\n        className={styles.commentSection}\n        ref={ref}\n        {...props}\n      >\n        <div className={styles.commentForm}>\n          <h2>Add a Comment</h2>\n          <Form\n            inputItems={{\n              name: {\n                placeholder: \"Name\",\n              },\n              comment: {\n                placeholder: \"Comment\",\n                option: \"textarea\",\n              }\n            }}\n            submitFn={(input) => {\n              console.log(input.comment);\n            }}\n          >\n            <Button styledAs='oval'>\n              Comment\n            </Button>\n          </Form>\n        </div>\n\n        <div className={styles.commentSectionContent}>\n          <h2>Comments</h2>\n          <div>\n            {comments.map((comment, idx) =>\n              <Comment key={idx} commentId={idx} comment={comment} />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default CommentSection;\n","import styles from \"./MediaShareBtns.module.scss\";\n\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  TwitterShareButton,\n  TwitterIcon,\n  RedditShareButton,\n  RedditIcon,\n} from \"react-share\";\nimport Button from \"components/UI/Button\";\n\n\nfunction MediaShareBtns({\n  title,\n}: {\n  title: string;\n}) {\n  const articleUrl = location.href;\n  const quote = `Give this article a read - ${title}`;\n  // this is someone else's job...\n  const hashtags = [\"projectenv\", \"climatechange\", \"environment\", \"recycling\"];\n\n  return (\n    <div className={styles.shareBtns}>\n      {/* WARN: facebook share is broken, could be my account */}\n      < FacebookShareButton\n        url={articleUrl}\n        quote={quote}\n        hashtag=\"#projectenv\"\n      >\n        <FacebookIcon />\n      </FacebookShareButton>\n      <TwitterShareButton\n        url={articleUrl}\n        title={quote}\n        hashtags={hashtags}\n      >\n        <TwitterIcon />\n      </TwitterShareButton>\n      <RedditShareButton\n        url={articleUrl}\n        title={quote}\n      >\n        <RedditIcon />\n      </RedditShareButton>\n      <Button\n        styledAs='oval'\n        className={styles.copyLinkBtn + \" material-icons\"}\n        onClick={async (e) => {\n          await navigator.clipboard.writeText(articleUrl);\n          const btn = e.target as HTMLButtonElement;\n\n          btn.innerHTML = \"done\";\n          btn.classList.add(styles.clicked);\n\n          setTimeout(() => {\n            btn.innerHTML = \"link\";\n            btn.classList.remove(styles.clicked);\n          }, 2000);\n        }}\n      >\n        link\n      </Button>\n    </div >\n  );\n}\n\nexport default MediaShareBtns;","import styles from \"./CheckboxCounterBtn.module.scss\";\nimport { forwardRef } from \"react\";\n\nimport CheckboxButton from \"components/UI/CheckboxButton\";\n\n\ntype CheckboxProps = Omit<Parameters<typeof CheckboxButton>[0], \"styledAs\" | \"children\">;\ntype CheckboxCounterProps = {\n  materialIcon: string,\n  counter?: number;\n} & CheckboxProps;\n\nconst CheckboxCounterBtn = forwardRef<HTMLInputElement, CheckboxCounterProps>(\n  function CheckboxCounterBtn(\n    {\n      materialIcon,\n      counter,\n      ...props\n    },\n    ref\n  ) {\n    return (\n      <div className={styles.checkboxCounterBtn}>\n        <CheckboxButton\n          ref={ref}\n          styledAs='circle'\n          {...props}\n        >\n          <span className='material-icons'>\n            {materialIcon}\n          </span>\n        </CheckboxButton >\n        <p>{counter}</p>\n      </div>\n    );\n  }\n);\n\nexport default CheckboxCounterBtn;","import styles from \"./FloatingSocialMenu.module.scss\";\nimport { useState, useRef } from \"react\";\n\nimport MediaShareBtns from \"./MediaShareBtns\";\nimport CheckboxCounterBtn from \"components/UI/CheckboxCounterBtn\";\nimport Button from \"components/UI/Button\";\n\n\nfunction FloatingSocialMenu({\n  title,\n  commentSectionRef,\n  likeCount,\n  dislikeCount\n}: {\n  title: string;\n  commentSectionRef: React.RefObject<HTMLDivElement>;\n  likeCount: number,\n  dislikeCount: number,\n}) {\n  const [expandShare, setExpandShare] = useState(false);\n  const likeBtnRef = useRef<HTMLInputElement>(null);\n  const dislikeBtnRef = useRef<HTMLInputElement>(null);\n\n  const handleVote = (\n    e: React.FormEvent<HTMLInputElement>\n  ) => {\n    const likeBtn = likeBtnRef.current;\n    const dislikeBtn = dislikeBtnRef.current;\n    if (!likeBtn || !dislikeBtn) return;\n\n    if ((e.target === likeBtn) && (likeBtn.checked)) {\n      dislikeBtn.checked = false;\n    }\n\n    if ((e.target === dislikeBtn) && (dislikeBtn.checked)) {\n      likeBtn.checked = false;\n    }\n  };\n\n  return (\n    <div className={styles.floatingSocialMenu}>\n      <CheckboxCounterBtn\n        ref={likeBtnRef}\n        name='likes'\n        materialIcon='thumb_up'\n        counter={likeCount}\n        onChange={(e) => {\n          handleVote(e);\n        }}\n      />\n      <CheckboxCounterBtn\n        ref={dislikeBtnRef}\n        name='dislikes'\n        materialIcon='thumb_down'\n        counter={dislikeCount}\n        onChange={(e) => {\n          handleVote(e);\n        }}\n      />\n      {(expandShare) && (\n        <MediaShareBtns title={title} />\n      )}\n      <Button\n        styledAs=\"circle\"\n        onClick={() => {\n          const commentSection = commentSectionRef.current;\n          if (!commentSection) return;\n\n          const posY = commentSection.getBoundingClientRect().top + window.pageYOffset - 100;\n          window.scrollTo({ top: posY, behavior: \"smooth\" });\n        }}\n      >\n        <span className='material-icons'>\n          comment\n        </span>\n      </Button>\n      <Button\n        styledAs=\"circle\"\n        onClick={() => setExpandShare(!expandShare)}\n      >\n        <span className='material-icons'>\n          {expandShare ? \"close\" : \"share\"}\n        </span>\n      </Button>\n    </div >\n  );\n}\n\nexport default FloatingSocialMenu;\n","import styles from \"./TableOfContents.module.scss\";\nimport { HeaderInformation } from \"utils/preprocessMarkdown\";\nimport Collapsible from \"components/UI/Collapsible\";\n\n\nfunction TableOfContents({ sectionHeaders }: { sectionHeaders: HeaderInformation[]; }) {\n  return (sectionHeaders.length > 0) ? (\n    <Collapsible\n      className={styles.tableOfContents}\n      header=\"Table of Contents\"\n      centered={true}\n    >\n      <nav>\n        {\n          sectionHeaders.map(({ level, text }) => (\n            <a key={text} href={\"#\" + text}>\n              <p style={{\n                marginLeft: `${(level - 1) * 2}em`\n              }}>\n                &bull; {text}\n              </p>\n            </a>\n          ))\n        }\n      </nav>\n    </Collapsible>\n  ) : null;\n}\n\nexport default TableOfContents;","import styles from \"./TagViews.module.scss\";\n\n\nfunction TagViews({ tags }: { tags?: string[]; }) {\n  return (\n    <div className={styles.tagView}>\n      {\n        (tags) ? (\n          <>\n            <h5>This article was tagged with: </h5>\n            {tags.map((tag) => <p key={tag}>{tag}</p>)}\n          </>\n        ) : (\n          <h5>This article has not been tagged.</h5>\n        )\n      }\n    </div>\n  );\n}\n\nexport default TagViews;","import styles from \"components/Article/Article.module.scss\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { format } from \"date-fns\";\n\nimport { useAppSelector, useAppDispatch } from \"app/hooks\";\nimport { getCommentsOfArticle, migrateArticle, deleteArticle, restoreArticle, Article } from \"app/articlesSlice\";\nimport { LoginType, selectLoginType } from \"app/adminSlice\";\n\nimport { validPageLink } from \"utils/functions\";\nimport { preprocessMarkdown } from \"utils/preprocessMarkdown\";\n\nimport Input from \"components/Form/Input\";\nimport Button from \"components/UI/Button\";\nimport MarkdownRender from \"components/Article/MarkdownRender\";\nimport CommentSection from \"components/Comment/CommentSection\";\n\nimport Admin from \"pages/Admin/Admin\";\nimport FloatingSocialMenu from \"./FloatingSocialMenu\";\nimport TableOfContents from \"./TableOfContents\";\nimport TagViews from \"./TagViews\";\n\nimport { CommentModel, TopLevelCommentModel } from \"components/Comment/Comment\";\n\n\nimport Banner from \"./Banner\";\n\n\nenum PageViewType {\n  Reading,\n  Editting,\n  Migration,\n}\n\ninterface ArticleProperties {\n  inRecycling: boolean,\n  article: Article,\n}\n\nfunction ArticleComponent({ article, inRecycling }: ArticleProperties) {\n  const history = useHistory();\n  const dispatch = useAppDispatch();\n  const currentLoginType = useAppSelector(selectLoginType);\n  const isAdmin = currentLoginType === LoginType.Admin;\n\n  const {\n    name,\n    content,\n    dateCreated,\n    dateModified,\n    likeCount,\n    dislikeCount\n  } = article;\n  const [migrationTitleName, updateMigrationTitleName] = useState(name);\n\n  const [lastViewType, updateLastViewType] = useState(PageViewType.Reading);\n  const [viewType, updateViewType] = useState(PageViewType.Reading);\n\n  const processedMarkdown = preprocessMarkdown(content);\n\n  const commentSectionRef = useRef<HTMLDivElement>(null);\n\n  const [comments, updateComments] = useState<TopLevelCommentModel[]>([]);\n\n  // We don't have direct notifications, and honestly in real time comments that can be\n  // probably hectic. So this is the best thing I could think of. This is called when you reply\n  // or comment.\n  const [commentPinger, _ucp] = useState(0);\n  function refetchComments() {\n    _ucp(commentPinger + 1);\n  }\n  // this won't be a dispatch I suppose.\n  useEffect(() => {\n    (async function () {\n      const retrievedComments = await getCommentsOfArticle(name);\n      updateComments(retrievedComments);\n    })();\n  }, [commentPinger]);\n\n  function toggleView(target: PageViewType) {\n    if (viewType !== target) {\n      updateViewType(target);\n      updateLastViewType(viewType);\n    } else {\n      updateViewType(lastViewType);\n    }\n  }\n\n  const standardAdminControls = (\n    <>\n      <Button\n        styledAs=\"oval\"\n        onClick={() => toggleView(PageViewType.Editting)}\n      >\n        Edit This Page\n      </Button>\n      <Button\n        onClick={() => toggleView(PageViewType.Migration)}\n        styledAs=\"oval\">\n        Migrate Page\n      </Button>\n    </>\n  );\n\n  const recyclingAdminControls = (\n    <>\n      <Button\n        styledAs=\"oval\"\n        onClick={async () => {\n          if (confirm(\"Do you want to restore this article?\")) {\n            await dispatch(restoreArticle(name));\n            history.push(validPageLink(name));\n          }\n        }}\n      >\n        Restore Article\n      </Button>\n    </>\n  );\n\n  return <>\n    {\n      (isAdmin) && (\n        <div id={styles.articleControls}>\n          {(!inRecycling) ? standardAdminControls : recyclingAdminControls}\n          <Button\n            styledAs=\"oval-danger\"\n            onClick={() => {\n              if (confirm((inRecycling) ? \"Permenantly delete this article?\" : \"Recycle this article?\")) {\n                dispatch(deleteArticle(name));\n                history.push(\"/\");\n              }\n            }}\n          >\n            Delete Page\n          </Button>\n        \n        </div>\n      )\n      \n    }\n    {(() => {\n      switch (viewType) {\n      case PageViewType.Reading:\n        return (\n          <>\n\n            <FloatingSocialMenu\n              title={name}\n              commentSectionRef={commentSectionRef}\n              likeCount={likeCount}\n              dislikeCount={dislikeCount}\n            />\n\n            \n            {(article?.bannerImage)&&(\n              <Banner bannerImage={article.bannerImage}></Banner>\n            )}\n\n\n            <h1 className={styles.title}> {name} </h1>\n            <div className={styles.dateView}>\n              <p>\n                  Created at {format(dateCreated, \"LLLL d, yyyy, h:mm a\")}\n              </p>\n              {(dateModified) && (\n                <p>\n                    Last Modified at {format(dateModified, \"LLLL d, yyyy, h:mm a\")}\n                </p>\n              )}\n            </div>\n            <TableOfContents sectionHeaders={processedMarkdown.headers} />\n            <MarkdownRender className={styles.article}>\n              {processedMarkdown.processed}\n            </MarkdownRender>\n            <CommentSection\n              ref={commentSectionRef}\n              comments={comments}\n            />\n            <TagViews tags={article.tags} />\n          </>\n        );\n\n      case PageViewType.Editting:\n        return isAdmin && <Admin currentArticle={article} />;\n\n      case PageViewType.Migration:\n        return (\n          <>\n            <h1>Page Migration</h1>\n            <Input\n              label=\"Migration Title\"\n              changeHandler={(e) => updateMigrationTitleName(e.target.value)}\n              defaultValue={migrationTitleName}\n              value={migrationTitleName} />\n            <Button onClick={async () => {\n              console.log(migrationTitleName, name);\n              if (migrationTitleName === name) {\n                alert(\"You cannot migrate a page unto itself!\");\n              } else {\n                const dispatchResult = await dispatch(migrateArticle({\n                  name,\n                  newName: migrationTitleName\n                }));\n                if (dispatchResult.payload) {\n                  history.push(validPageLink(migrationTitleName));\n                }\n              }\n            }}>\n                Migrate Page\n            </Button>\n          </>\n        );\n      }\n    })()}\n  </>;\n}\n\nexport default ArticleComponent;\n"],"sourceRoot":""}