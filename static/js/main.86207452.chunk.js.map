{"version":3,"sources":["app/articlesSlice.ts","app/adminSlice.ts","app/store.ts","app/hooks.ts","secrets.js","utils/intoParsable.js","utils/preprocessMarkdown.js","components/Article/MarkdownRender.tsx","pages/Admin/Editors/NoticeBanner.tsx","utils/functions.ts","utils/DOMIntoMarkdown.js","pages/Admin/Editors/RichTextEditWidgetInformation.tsx","components/Form/Button.tsx","pages/Admin/Editors/RichTextEditor.tsx","pages/Admin/Admin.tsx","components/Article/Article.tsx","utils/search.js","components/Searchbar/Searchbar.tsx","pages/Header/Search.tsx","pages/Header/Header.tsx","pages/Homepage/Homepage.tsx","pages/Index/IndexPage.tsx","App.tsx","index.tsx","pages/Header/Header.module.scss","components/Article/Article.module.scss","pages/Admin/Editors/NoticeBanner.module.scss","pages/Admin/Editors/richWidgetBar.module.scss","pages/Header/Search.module.scss","components/Searchbar/Searchbar.module.scss","pages/Homepage/Homepage.module.scss","components/Form/Button.module.scss","App.module.scss","pages/Admin/Editors/bottomToolbar.module.scss"],"names":["databaseApi","application","applicationUser","loginWith","information","a","credentials","Credentials","emailPassword","email","password","anonymous","logIn","user","initApi","createAsyncThunk","appId","dispatch","rejectWithValue","App","id","queryForArticles","undefined","console","error","response","data","query","functions","getAllArticles","Error","deleteArticle","name","removeArticle","insertArticle","articleContent","createOrUpdateArticle","articlesSlice","createSlice","initialState","status","articlesData","articles","reducers","extraReducers","builder","addCase","pending","state","rejected","fulfilled","action","payload","selectSelf","selectStatus","createDraftSafeSelector","selectArticlesData","adminSlice","isAdmin","setIsAdmin","actions","selectIsAdmin","admin","persistConfig","key","storage","whitelist","rootReducer","combineReducers","articlesReducer","adminReducer","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","ignoredPaths","persistor","persistStore","useAppDispatch","useDispatch","useAppSelector","useSelector","Secrets","intoParsable","input","current_character_index","still_parsing","length","peek_character","look_ahead_offset","eat_character","result","withPreservedPosition","progn_fn","restoration_index","stillParsing","peekCharacter","requireCharacter","character","eatCharacter","consumeUntil","ending_predicate_fn","tryParseString","parsable","delimiter","acceptMultiline","successful_parse","string_contents","eatIdentifier","c","eatWhitespace","log","preprocessMarkdown","onImageFound","nextCharacter","has_end","inbetween","image_tag","property","maybe_string","value_identifier","md","MD","html","breaks","linkify","typographer","renderMarkdown","text","render","MarkdownRender","className","children","dangerouslySetInnerHTML","__html","NoticeBanner","dirtyFlag","styles","noticeBannerStyles","dropOut","dropIn","useState","selfDirtyFlag","updateSelfDirtyFlag","style","updateStyle","main","validPageLink","originalName","toLowerCase","trim","replace","image_name","form_data","FormData","append","requestUrl","fetch","method","body","res","json","imageFile","whenRetrieved","image_file","img","document","createElement","src","URL","createObjectURL","onload","canvas","canvas_context","getContext","width","height","drawImage","imgData","toDataURL","split","dictionaryUpdateKeyNested","dictionary","keys","updateFunction","shallowClone","slice","newDictionary","dictionaryUpdateKey","surrounder","sym","content","spacesLeft","spacesRight","i","repeat","surrounders","renderElement","root","text_contents","tagName","parentElement","Number","Array","from","reduce","accumulator","listItem","childText","renderDomAsMarkdown","fn","getAttribute","nodeType","textContent","hasChildNodes","childNodes","output","node","widgets","heading","active","types","h1","display","command","argument","category","h2","h3","h4","h5","h6","image","list","orderedList","unorderedList","bold","italic","underline","Button","type","styleOption","props","button","fileHandlerOnChange","probablyFile","target","files","retrieveImageData","uploadImage","then","imgURL","success","execCommand","url","editorHandleKeybindings","saveDocument","toggleWidget","executeRichTextCommand","updateDirtyFlag","event","shiftKey","disableDefaultBehavior","ctrlKey","preventDefault","stopPropagation","RichTextEditor","submissionHandler","currentArticle","toggleDraftStatus","initialArticleState","editableTitleDOMRef","useRef","editableAreaDOMRef","widgetStates","updateWidgetState","current","markdownText","innerHTML","_toggleWidgetActiveState","widgetId","categoryValue","currentlyActive","toggleWidgetActiveState","commandName","optionalArgument","fileDialog","click","addEventListener","focus","queryRichTextCommand","wantedValue","queryCommandValue","queryCommandState","richWidgetBarStyle","Object","entries","value","copy","_flattenWidgetStateTypes","map","widget","onClick","_","title","contentEditable","ref","borderColor","borderWidth","margin","borderStyle","articleStyles","article","onSelect","newWidgetState","onKeyDown","bottomToolbarStyle","Admin","draftStatus","updateDraftStatus","submissionData","onFinishedCallback","ArticleComponent","history","useHistory","adminEditView","updateAdminEditView","push","approximateSearch","sort","matched_characters","b","count","shorter_length","Math","min","toUpperCase","x","y","matched","Searchbar","returnInput","setInput","lastTimeTyping","Date","getTime","searchbar","autoFocus","placeholder","onChange","e","setTimeout","clearDiv","clear","renderHoverboxSearch","searchResults","hoverBox","to","Search","searchFunction","renderFunction","searchResult","setSearchResult","Header","header","logoDiv","navbar","menu","links","ArticleShowcase","array","floor","random","articleDisplay","substr","replaceAll","Homepage","href","IndexPage","index","filter","RegisterPage","LoginPage","useEffect","userName","prompt","loginResult","customData","alert","exact","path","Article","InitializingApp","ReactDOM","StrictMode","basename","getElementById","module","exports"],"mappings":"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","file":"static/js/main.86207452.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk, createDraftSafeSelector } from '@reduxjs/toolkit';\r\nimport { RootState } from 'app/store';\r\n\r\nimport { App, User, Credentials } from \"realm-web\";\r\n\r\nexport interface Article {\r\n  name: string;\r\n  content: string;\r\n  draftStatus: boolean;\r\n  tags?: string[];\r\n}\r\n\r\nexport interface ArticlesData {\r\n  articles: Article[];\r\n};\r\n\r\nexport type ArticlesDataProperties = {\r\n  articlesData: ArticlesData;\r\n};\r\n\r\nconst databaseApi: {\r\n  application: App | undefined | null;\r\n  applicationUser: User | undefined | null;\r\n} = {\r\n  application: null,\r\n  applicationUser: null\r\n};\r\n\r\nconst initialState: {\r\n  status: 'idle' | 'loading' | 'succeed' | 'failed';\r\n  articlesData: ArticlesData;\r\n} = {\r\n  status: 'idle',\r\n  articlesData: {\r\n    articles: []\r\n  },\r\n};\r\n\r\nexport async function loginWith(information?: { email: string, password: string; }) {\r\n  const credentials = (!information)\r\n    ? Credentials.anonymous()\r\n    : Credentials.emailPassword(information.email, information.password);\r\n\r\n  const user = await databaseApi.application?.logIn(credentials);\r\n  databaseApi.applicationUser = user;\r\n  return user;\r\n}\r\n\r\nexport const initApi = createAsyncThunk(\r\n  'articles/initApi',\r\n  async (appId: string, { dispatch, rejectWithValue }) => {\r\n    try {\r\n      databaseApi.application = new App({ id: appId });\r\n      databaseApi.applicationUser = await loginWith();\r\n\r\n      dispatch(queryForArticles(undefined));\r\n    } catch (error) {\r\n      console.error(\"Failed to login because: \", error);\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const queryForArticles = createAsyncThunk(\r\n  'articles/queryForArticles',\r\n  /*\r\n    the query is actually a dictionary, but it is very varied, I'll fill this out\r\n    later.\r\n  */\r\n  async (query: any | undefined, { rejectWithValue }) => {\r\n    // I should \"lazy-init\" login this\r\n    // however I forced a buffer load, before anything happens\r\n    // so I am guaranteed to have a user unless we couldn't login for some reason.\r\n\r\n    try {\r\n      if (databaseApi.applicationUser) return await databaseApi.applicationUser.functions.getAllArticles();\r\n      else throw new Error('No user? This is bad news');\r\n    } catch (error) {\r\n      console.error(\"Failed to login because: \", error);\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteArticle = createAsyncThunk(\r\n  'articles/deleteArticle',\r\n  async (name: string, { dispatch, rejectWithValue }) => {\r\n\r\n    try {\r\n      if (databaseApi.applicationUser) {\r\n        await databaseApi.applicationUser.functions.removeArticle(name);\r\n        dispatch(queryForArticles(undefined));\r\n      } else {\r\n        throw new Error('No user? This is bad news');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to login because: \", error);\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const insertArticle = createAsyncThunk(\r\n  'articles/deleteArticle',\r\n  async (articleContent: Article, { dispatch, rejectWithValue }) => {\r\n\r\n    try {\r\n      if (databaseApi.applicationUser) {\r\n        await databaseApi.applicationUser.functions.createOrUpdateArticle(articleContent);\r\n        dispatch(queryForArticles(undefined));\r\n      } else {\r\n        throw new Error('No user? This is bad news');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to login because: \", error);\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\n\r\nconst articlesSlice = createSlice({\r\n  name: 'api',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(\r\n      initApi.pending,\r\n      (state) => {\r\n        state.status = 'loading';\r\n      }\r\n    ).addCase(\r\n      initApi.rejected,\r\n      (state) => {\r\n        state.status = 'failed';\r\n      }\r\n    ).addCase(\r\n      initApi.fulfilled,\r\n      (state) => {\r\n        state.status = 'succeed';\r\n      }\r\n    ).addCase(\r\n      queryForArticles.fulfilled,\r\n      (state, action) => {\r\n        state.articlesData = action.payload;\r\n      }\r\n    );\r\n  }\r\n});\r\n\r\nexport default articlesSlice.reducer;\r\n\r\nconst selectSelf = (state: RootState) => state.articles;\r\n\r\n\r\nexport const selectStatus = createDraftSafeSelector(\r\n  selectSelf,\r\n  (articles) => articles.status\r\n);\r\n\r\nexport const selectArticlesData = createDraftSafeSelector(\r\n  selectSelf,\r\n  (articles) => articles.articlesData\r\n);","import { createSlice, createDraftSafeSelector, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from 'app/store';\r\n\r\n\r\nconst initialState = {\r\n  isAdmin: false\r\n};\r\n\r\n\r\nconst adminSlice = createSlice({\r\n  name: 'admin',\r\n  initialState,\r\n  reducers: {\r\n    setIsAdmin: (state, action: PayloadAction<boolean>) => {\r\n      state.isAdmin = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  setIsAdmin\r\n} = adminSlice.actions;\r\nexport default adminSlice.reducer;\r\n\r\nconst selectSelf = (state: RootState) => state.admin;\r\n\r\n\r\nexport const selectIsAdmin = createDraftSafeSelector(\r\n  selectSelf,\r\n  (admin) => admin.isAdmin\r\n);","import { configureStore, ThunkAction, Action, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore, persistReducer,\r\n  FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport articlesReducer from 'app/articlesSlice';\r\nimport adminReducer from 'app/adminSlice';\r\n\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  whitelist: ['admin']\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  articles: articlesReducer,\r\n  admin: adminReducer\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n/*\r\nNOTE(jerry):\r\n\r\nPersist store, will not work unless we store additional information, and I only have enough\r\nknowledge to know how to turn off the persistant store and understand that it is a persistant\r\nstore.\r\n\r\nWe just need to store the currently logged user credentials, and we can go from there. Basically\r\non app reinitialization we need to try to login using the existing credentials.\r\n\r\nSo now we don't really have a true or false anymore...\r\n*/\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [\r\n        FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER,\r\n        'articles/queryForArticles/fulfilled'\r\n      ],\r\n      ignoredPaths: ['articles.articlesData']\r\n    }\r\n  })\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","/*\r\n  Store context sensitive information here\r\n */\r\nexport const Secrets = {\r\n    RECYCLOPEDIA_APPLICATION_ID: \"recyclopedia-api-uuuus\",\r\n    ADMIN_PASSWORD: \"tonyisugly\",\r\n    IMGBB_KEY: \"5eba0537206ecc76b4a505e866868853\"\r\n};\r\n","/*\r\n  Parsable is an interface produced from a string input.\r\n  \r\n  It'll convert a string into a `Parsable` object which removes the\r\n  ability to modify the string, and instead replaces it with reading\r\n  facilities that would be very useful for tokenizing or lexical analysis.\r\n  \r\n  To use just do:\r\n\r\n  object = intoParsable(\"abcdefghijklmnop\");\r\n  \r\n  There's also a few premade parsable functions that aid in building parsers.\r\n*/\r\n\r\nexport function intoParsable(input) {\r\n  // I'm internally using snake_case because I'm comfortable with it\r\n  // but everyone else uses camel case.\r\n  let current_character_index = 0;\r\n\r\n  function still_parsing() {\r\n    return (current_character_index < input.length);\r\n  }\r\n\r\n  function peek_character(look_ahead_offset = 0) {\r\n    if (current_character_index + look_ahead_offset > input.length) {\r\n      return null;\r\n    } else {\r\n      return input[current_character_index + look_ahead_offset];\r\n    }\r\n  }\r\n\r\n\r\n  function require_character(character) {\r\n    if (peek_character() === character) {\r\n      eat_character();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function eat_character() {\r\n    if (current_character_index > input.length) {\r\n      return null;\r\n    } else {\r\n      const result = peek_character();\r\n      current_character_index++;\r\n      return result;\r\n    }\r\n  }\r\n\r\n  function consume_until(ending_predicate_fn) {\r\n    let result = \"\";\r\n\r\n    while (still_parsing()) {\r\n      if (ending_predicate_fn()) {\r\n        break;\r\n      } else {\r\n        result += eat_character();\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  function with_preserved_position(progn_fn) {\r\n    const restoration_index = current_character_index;\r\n    let result = progn_fn();\r\n    current_character_index = restoration_index;\r\n    return result;\r\n  }\r\n\r\n  return {\r\n    withPreservedPosition: with_preserved_position,\r\n    stillParsing: still_parsing,\r\n    peekCharacter: peek_character,\r\n    requireCharacter: require_character,\r\n    eatCharacter: eat_character,\r\n    consumeUntil: consume_until,\r\n  };\r\n}\r\n\r\n// TODO(jerry): add escaped characters!\r\nexport function tryParseString(parsable, { delimiter, acceptMultiline }) {\r\n  if (parsable.requireCharacter(delimiter)) {\r\n    let successful_parse = true;\r\n    let string_contents = parsable.consumeUntil(\r\n      function () {\r\n        if (!acceptMultiline && parsable.requireCharacter('\\n')) {\r\n          successful_parse = false;\r\n          return true;\r\n        } else if (parsable.requireCharacter(delimiter)) {\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n    );\r\n    if (string_contents && successful_parse) {\r\n      return string_contents;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n// Pairs are singular characters unfortunately.\r\n// not strings.\r\nexport function matchedQuotePairs(parsable) {\r\n  return true;\r\n\r\n  // Henry: Commented out to resolve warnings in console\r\n\r\n  // return parsable.withPreservedPosition(\r\n  //   function () {\r\n  //     let count = 0;\r\n\r\n  //     while (parsable.stillParsing()) {\r\n  //       if (parsable.requireCharacter('\\\\')) {\r\n  //         parsable.eatCharacter();\r\n  //       } else {\r\n  //         if (parsable.requireCharacter('\\'')) {\r\n  //           count++;\r\n  //         }\r\n  //         parsable.eatCharacter();\r\n  //       }\r\n  //     }\r\n\r\n  //     return (count % 2 === 0);\r\n  //   }\r\n  // );\r\n}\r\n\r\n// console.log(tryParseString(intoParsable('\\'Hello\\nWorld!\\'|'), {delimiter: '\\'', acceptMultiline: true}));\r\n// console.log(tryParseString(intoParsable('\\'Hello\\nWorld!\\'|'), {delimiter: '\\''}));\r\n\r\nconst is_literal_acceptable = (c) => (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9');\r\nexport function eatIdentifier(parsable) {\r\n  if (parsable.stillParsing()) {\r\n    return parsable.consumeUntil(() => !is_literal_acceptable(parsable.peekCharacter()));\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function eatWhitespace(parsable) {\r\n  while (parsable.stillParsing()) {\r\n    if (parsable.peekCharacter() === ' ') {\r\n      parsable.eatCharacter();\r\n    } else {\r\n      console.log(parsable.peekCharacter());\r\n      break;\r\n    }\r\n  }\r\n}\r\n","/*\r\n  This is the markdown preprocessor for any special extensions we might want to support.\r\n  \r\n  Does not really do tokenizing, so be ware of dragons.\r\n */\r\nimport { intoParsable, tryParseString, eatIdentifier, eatWhitespace } from 'utils/intoParsable';\r\n\r\nexport function preprocessMarkdown(input, onImageFound = undefined) {\r\n  let result = \"\";\r\n  input = intoParsable(input);\r\n\r\n  while (input.stillParsing()) {\r\n    if (input.requireCharacter('\\\\')) {\r\n      const nextCharacter = input.eatCharacter();\r\n      if (nextCharacter === '\\n') {\r\n        result += \"<br/>\\n\";\r\n      } else {\r\n        result += nextCharacter;\r\n      }\r\n    } else if (input.requireCharacter('@')) {\r\n      if (input.requireCharacter('@')) {\r\n        let has_end = false;\r\n        /*\r\n          Whenever our region fails to parse it'll just refuse to output anything.\r\n          \r\n          @ asdf @ asdf -> @ asdf @ asdf\r\n          @@ asdf @ asdf -> null\r\n          @@ asdf @@ asdf -> whatever we would've parsed.\r\n          \r\n          if you need multiple @ signs consecutively just do\r\n          \\@\\@ or @\\@.\r\n         */\r\n        let inbetween = intoParsable(\r\n          input.consumeUntil(\r\n            function () {\r\n              if (input.requireCharacter('\\n')) {\r\n                return true;\r\n              } else if (input.requireCharacter('@')) {\r\n                /*\r\n                  When we encounter an @ sign, it's likely to be the end of parsing a \"region\".\r\n                 */\r\n                if (input.requireCharacter('@')) {\r\n                  has_end = true;\r\n                }\r\n                return true;\r\n              }\r\n              return false;\r\n            }\r\n          )\r\n        );\r\n\r\n        if (inbetween && has_end) {\r\n          let image_tag = \"<img \";\r\n          let error = false;\r\n\r\n          while (inbetween.stillParsing() && !error) {\r\n            eatWhitespace(inbetween);\r\n            let property = eatIdentifier(inbetween);\r\n            if (property) {\r\n              image_tag += property;\r\n              eatWhitespace(inbetween);\r\n              if (inbetween.requireCharacter('=')) {\r\n                image_tag += \"=\";\r\n                eatWhitespace(inbetween);\r\n                if (inbetween.peekCharacter() === '\\'') {\r\n                  let maybe_string = tryParseString(inbetween, { delimiter: '\\'' });\r\n                  if (maybe_string) {\r\n                    image_tag += '\\'' + maybe_string + '\\'';\r\n                    if (property === \"src\" && onImageFound) {\r\n                      onImageFound(maybe_string);\r\n                    }\r\n                  } else {\r\n                    console.error(\"No string value?\");\r\n                    error = true;\r\n                  }\r\n                } else {\r\n                  let value_identifier = eatIdentifier(inbetween);\r\n                  if (value_identifier) {\r\n                    image_tag += value_identifier;\r\n                  } else {\r\n                    console.error(\"No value identifier?\");\r\n                    error = true;\r\n                  }\r\n                }\r\n                eatWhitespace(inbetween);\r\n                if (!inbetween.requireCharacter('|')) {\r\n                  if (eatIdentifier(inbetween) || tryParseString(inbetween, { delimiter: '\\'' })) {\r\n                    console.error(\"Missing pipe separator!\");\r\n                    error = true;\r\n                  }\r\n                }\r\n              } else {\r\n                console.error(\"Missing assignment for property?\");\r\n                error = true;\r\n              }\r\n            } else {\r\n              console.error(\"Could not find property name!\");\r\n              error = true;\r\n            }\r\n            image_tag += \" \";\r\n          }\r\n          image_tag += \"/>\";\r\n          if (!error) {\r\n            result += image_tag;\r\n          } else {\r\n            console.log(\"error happened\");\r\n          }\r\n        } else {\r\n          // not valid tag. Don't do anything.\r\n          // maybe add a newline since there should really only be one image per\r\n          // line as per markup style.\r\n          result += '\\n';\r\n        }\r\n      } else {\r\n        result += '@';\r\n      }\r\n    } else {\r\n      result += input.eatCharacter();\r\n    }\r\n  }\r\n\r\n  return result;\r\n}","import MD from 'markdown-it';\r\nconst md = MD({\r\n  html: true,\r\n  breaks: true,\r\n  linkify: true,\r\n  typographer: true,\r\n});\r\n\r\nexport const renderMarkdown = (text: string) => md.render(text);\r\n\r\nfunction MarkdownRender({\r\n  className, children\r\n}: {\r\n  className: string; children: string;\r\n}) {\r\n  return (<div\r\n    className={className}\r\n    dangerouslySetInnerHTML={{ __html: renderMarkdown(children) }}>\r\n  </div>);\r\n}\r\n\r\nexport default MarkdownRender;","import noticeBannerStyles from './NoticeBanner.module.scss';\r\nimport { useState } from 'react';\r\n\r\nexport function NoticeBanner({\r\n  children, dirtyFlag\r\n}: {\r\n  children: React.ReactNode;\r\n  dirtyFlag: boolean;\r\n}) {\r\n  const styles = [noticeBannerStyles.dropOut, noticeBannerStyles.dropIn];\r\n\r\n  const [selfDirtyFlag, updateSelfDirtyFlag] = useState(dirtyFlag);\r\n  const [style, updateStyle] = useState(0);\r\n\r\n  if (dirtyFlag !== selfDirtyFlag) {\r\n    updateStyle((style + 1));\r\n    updateSelfDirtyFlag(!selfDirtyFlag);\r\n  }\r\n\r\n  return (\r\n    <div className={noticeBannerStyles.main + \" \" + styles[style % 2]}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { Secrets } from \"secrets\";\r\n\r\n//Return the current property of a ref if it is a ref\r\nexport const getRefCurrent = (ref: React.MutableRefObject<any>) => {\r\n  return ref.hasOwnProperty(\"current\")\r\n    ? ref.current\r\n    : ref;\r\n};\r\n\r\nexport const validPageLink = (originalName: string) => `/${originalName.toLowerCase().trim().replace(/ +/g, '_')}`;\r\n\r\nexport async function uploadImage(image_name: string) {\r\n  const form_data = new FormData();\r\n  form_data.append(\"image\", image_name);\r\n\r\n  const expirationValue = 600;\r\n  const requestUrl = `https://api.imgbb.com/1/upload?expiration${expirationValue}&key=${Secrets.IMGBB_KEY}`;\r\n  console.log(requestUrl);\r\n  const res = await fetch(requestUrl, { method: \"POST\", body: form_data, });\r\n  console.log(\"waiting...\");\r\n\r\n  return await res.json();\r\n}\r\n\r\n// for now this is an alias.\r\ntype Base64String = string;\r\ntype RetrievedImageCallback = (f: Base64String) => void;\r\nexport async function retrieveImageData(\r\n    imageFile: File,\r\n    whenRetrieved: RetrievedImageCallback\r\n  ) {\r\n  const image_file = imageFile;\r\n  const img = document.createElement('img');\r\n  img.src = URL.createObjectURL(image_file);\r\n  console.log(\"attempting to load: \", image_file);\r\n  img.onload = async function () {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const canvas_context = canvas.getContext(\"2d\");\r\n    if (canvas_context) {\r\n      canvas.width = img.width;\r\n      canvas.height = img.height;\r\n\r\n      canvas_context.drawImage(img, 0, 0);\r\n      const imgData = canvas.toDataURL().split(',')[1];\r\n      console.log(\"image data retrieved\");\r\n      whenRetrieved(imgData);\r\n    } else {\r\n      console.log(\"null canvas?\");\r\n    }\r\n  };\r\n}\r\n\r\n/*\r\n  These functions are legitimately supposed to be any. These are supposed to operate indiscriminately\r\n  on any type of dictionary like object.\r\n\r\n  Javascript allows you to use anything as a key technically for dictionaries,\r\n  but this is as close I can get to that I suppose...\r\n */\r\n\r\nexport function dictionaryUpdateKey(\r\n  dictionary: {[key: string]: any}, \r\n  key: any,\r\n  updateFunction: (f: unknown) => unknown\r\n) {\r\n  const newDictionary = { ...dictionary };\r\n  newDictionary[key] = updateFunction(dictionary[key]);\r\n  return newDictionary;\r\n}\r\n\r\nexport function dictionaryUpdateKeyNested(\r\n  dictionary: {[key: string]: any}, \r\n  keys: any[],\r\n  updateFunction: (f: unknown) => unknown\r\n) {\r\n  if (keys.length > 1) {\r\n    const shallowClone = { ...dictionary };\r\n    shallowClone[keys[0]] =\r\n      dictionaryUpdateKeyNested(shallowClone[keys[0]], keys.slice(1), updateFunction);\r\n    return shallowClone;\r\n  }\r\n\r\n  // returns\r\n  return dictionaryUpdateKey(dictionary, keys[0], updateFunction);\r\n}\r\n\r\nexport const useTimeout = (callback: (f: void) => void, delay: number) => {\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => callback(), delay);\r\n    return () => clearTimeout(timer);\r\n  }, [delay, callback]);\r\n};\r\n\r\nexport function randomElt(array: any[]) {\r\n  return array[Math.floor(Math.random() * array.length)];\r\n}\r\n","/*\r\n    Inhouse DOM to Markdown interpreter.\r\n*/\r\nfunction log_message(msg) {}\r\nfunction surrounder(sym) {\r\n  return function (content) {\r\n    let spacesLeft = 0;\r\n    let spacesRight = 0;\r\n    for (let i = 0; i < content.length; ++i) {\r\n      if (content[i] !== ' ') {\r\n        spacesLeft = i - 1;\r\n        break;\r\n      }\r\n    }\r\n    for (let i = content.length - 1; i > 0; --i) {\r\n      if (content[i] !== ' ') {\r\n        break;\r\n      }\r\n      spacesRight++;\r\n    }\r\n    return `${spacesLeft > 0 ? \" \".repeat(spacesLeft) : \"\"}${sym}${content.trim()}${sym}${spacesRight > 0 ? \" \".repeat(spacesRight) : \"\"}`;\r\n  };\r\n}\r\nconst surrounders = {\r\n  \"B\": surrounder(\"**\"),\r\n  \"STRONG\": surrounder(\"**\"),\r\n  \"I\": surrounder(\"_\"),\r\n  \"EM\": surrounder(\"_\"),\r\n  \"U\": surrounder(\"__\"),\r\n};\r\nconst safe_call = (fn, ...rest) => (...rest) => (fn) ? fn(...rest) : rest[0];\r\n/*\r\nNOTE(jerry):\r\n\r\nI'm not a particular fan of this since this is definitely very scrappy. It does not know how to\r\nproperly handle nested lists, although without extra modification the RichTextEditor doesn't allow you\r\nto do nested lists trivially anyways... So hopefully it's not much of a disaster (just store the current indent\r\nlevel and then do it based off of whatever markdown seems to recognize a list as.)\r\n\r\nMost other normal elements are handled fine, it's really just the lists I'm concerned about.\r\n\r\nThis is entirely recursive, and because it's recursive it loses some information that may be useful for\r\ncleaner and probably easier rendering...\r\n*/\r\nfunction renderElement(root, text_contents) {\r\n  if (text_contents !== \"\") {\r\n    if (root.tagName === \"P\") {\r\n      log_message(\"paragraph\");\r\n      log_message(root.parentElement);\r\n      if (root.parentElement && (root.parentElement.tagName === \"LI\")) {\r\n        log_message(\"Parent was list?\");\r\n        return text_contents;\r\n      } else {\r\n        return text_contents + \"\\n\\n\";\r\n      }\r\n    } else if (root.tagName[0] === 'H') {\r\n      return \"#\".repeat(Number(root.tagName[1])) + \" \" + text_contents + \"\\n\";\r\n    } else if (root.tagName === \"OL\") {\r\n      let i = 0;\r\n      return Array.from(root.children).reduce(\r\n        function (accumulator, listItem) {\r\n          const childText = renderDomAsMarkdown(listItem);\r\n          if (childText !== \"\") {\r\n            return accumulator + `${((i++) + 1)}. ${childText}\\n`;\r\n          } else {\r\n            return accumulator;\r\n          }\r\n        }, \"\");\r\n    } else if (root.tagName === \"UL\") {\r\n      return Array.from(root.children).reduce(\r\n        function (accumulator, listItem) {\r\n          const childText = renderDomAsMarkdown(listItem);\r\n          if (childText !== \"\") {\r\n            return accumulator + `- ${childText}\\n`;\r\n          } else {\r\n            return \"\";\r\n          }\r\n        }, \"\");\r\n    }\r\n\r\n    log_message(\"going to try and root out tags friends\", root.tagName);\r\n    return safe_call(surrounders[root.tagName])(text_contents);\r\n  } else {\r\n    if (root.tagName === \"IMG\") {\r\n      const src = root.getAttribute(\"src\");\r\n      const result = `@@ src = '${src}' @@\\n`;\r\n      return result;\r\n    }\r\n\r\n    return (root.tagName === \"P\" || root.tagName === \"BR\") ? \"\\\\\\n\" : \"\";\r\n  }\r\n}\r\n\r\nexport function renderDomAsMarkdown(root) {\r\n  if (root.nodeType === 3) {\r\n    return root.textContent;\r\n  } else if (root.hasChildNodes()) {\r\n    const childrenStrings = Array.from(root.childNodes).reduce((output, node) => { return output + renderDomAsMarkdown(node); }, \"\");\r\n    const res = renderElement(root, childrenStrings);\r\n    return res;\r\n  } else {\r\n    return renderElement(root, \"\");\r\n  }\r\n\r\n  return \"\";\r\n}\r\n","import React from 'react';\r\n\r\nimport { dictionaryUpdateKey, dictionaryUpdateKeyNested } from 'utils/functions';\r\n\r\nexport type WidgetCategoryDic = Record<string,WidgetCategory>;\r\nexport type WidgetInformationDic = Record<string, WidgetInformation>;\r\n\r\nexport interface WidgetInformation {\r\n  name: string,\r\n  display?: JSX.Element,\r\n  command: string,\r\n  argument?: string,\r\n  category?: string,\r\n};\r\n\r\nexport interface WidgetCategory {\r\n  active: string | null,\r\n  types: WidgetInformationDic\r\n};\r\n\r\nexport const widgets: WidgetCategoryDic = {\r\n  heading: {\r\n    active: null,\r\n    types: {\r\n      h1: { name: \"Heading 1\", display: <b>h1</b>, command: \"heading\", argument: \"H1\", category: \"heading\" },\r\n      h2: { name: \"Heading 2\", display: <b>h2</b>, command: \"heading\", argument: \"H2\", category: \"heading\" },\r\n      h3: { name: \"Heading 3\", display: <b>h3</b>, command: \"heading\", argument: \"H3\", category: \"heading\" },\r\n      h4: { name: \"Heading 4\", display: <b>h4</b>, command: \"heading\", argument: \"H4\", category: \"heading\" },\r\n      h5: { name: \"Heading 5\", display: <b>h5</b>, command: \"heading\", argument: \"H5\", category: \"heading\" },\r\n      h6: { name: \"Heading 6\", display: <b>h6</b>, command: \"heading\", argument: \"H6\", category: \"heading\" },\r\n    }\r\n  },\r\n  image: {\r\n    active: null,\r\n    types: {\r\n      image: { name: \"Image\", display: <b>Insert Image</b>, command: \"@_insertImage\", category: \"image\" },\r\n    }\r\n  },\r\n  list: {\r\n    active: null,\r\n    types: {\r\n      orderedList: { name: \"Ordered List\", command: \"insertorderedlist\", category: \"list\" },\r\n      unorderedList: { name: \"Unordered List\", command: \"insertunorderedlist\", category: \"list\" },\r\n    }\r\n  },\r\n  // disadvantage at the moment. You don't have to do this, but this makes the current format work without code changes\r\n  bold: {\r\n    active: null,\r\n    types: {\r\n      bold: { name: \"Bold\", display: <b>B</b>, command: \"bold\" }\r\n    }\r\n  },\r\n  italic: {\r\n    active: null,\r\n    types: {\r\n      italic: { name: \"Italic\", display: <em>I</em>, command: \"italic\" }\r\n    }\r\n  },\r\n  underline: {\r\n    active: null,\r\n    types: {\r\n      underline: { name: \"Underline\", display: <u>UL</u>, command: \"underline\" }\r\n    }\r\n  },\r\n};\r\n\r\nexport function toggleWidgetActiveState(widgets: WidgetCategoryDic, widgetId: string, categoryValue?: string) {\r\n  return dictionaryUpdateKeyNested(\r\n    widgets,\r\n    [(categoryValue) ? (categoryValue) : (widgetId), \"active\"],\r\n    (currentlyActive) => (currentlyActive === widgetId) ? null : widgetId\r\n  );\r\n}\r\n\r\nexport function flattenWidgetStateTypes(widgets: WidgetCategoryDic): WidgetInformationDic {\r\n  return Object.entries(widgets).reduce(\r\n    function (accumulator, [id, { types }]) {\r\n      return Object.entries(types).reduce(\r\n        function (accumulator, [key, value]) {\r\n          const copy = { ...accumulator as WidgetInformationDic };\r\n          copy[key] = value;\r\n          return copy;\r\n        },\r\n        accumulator\r\n      );\r\n    }\r\n    , {});\r\n}\r\n","import styles from 'components/Form/Button.module.scss';\r\n\r\nconst Button = ({\r\n  children = '',\r\n  type = 'button',\r\n  styleOption,\r\n  ...props\r\n}: {\r\n  children?: React.ReactNode;\r\n  type?: 'submit' | 'reset' | 'button';\r\n  styleOption?: string;\r\n  onClick?(): void;\r\n}) => {\r\n  return (\r\n    <button\r\n      className={`${styles.button} ${styleOption ? styles[styleOption] : ''}`}\r\n      type={type}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { useState, useRef, KeyboardEventHandler, } from 'react';\r\nimport { preprocessMarkdown } from 'utils/preprocessMarkdown';\r\nimport { uploadImage, retrieveImageData } from 'utils/functions';\r\n\r\nimport { renderMarkdown } from \"components/Article/MarkdownRender\";\r\nimport { renderDomAsMarkdown } from 'utils/DOMIntoMarkdown';\r\nimport { dictionaryUpdateKeyNested } from 'utils/functions';\r\nimport { widgets, toggleWidgetActiveState, flattenWidgetStateTypes, WidgetCategory } from './RichTextEditWidgetInformation';\r\n\r\nimport { Article } from 'app/articlesSlice';\r\n\r\nimport bottomToolbarStyle from './bottomToolbar.module.scss';\r\nimport richWidgetBarStyle from './richWidgetBar.module.scss';\r\nimport styles from 'pages/Admin/Admin.module.scss';\r\nimport articleStyles from 'components/Article/Article.module.scss';\r\nimport Button from 'components/Form/Button';\r\n\r\nfunction fileHandlerOnChange({ target }: Event): void {\r\n  const probablyFile = (target as HTMLInputElement).files?.[0];\r\n\r\n  if (probablyFile)\r\n    retrieveImageData(probablyFile,\r\n      function (imgData) {\r\n        uploadImage(imgData).then(\r\n          function (imgURL) {\r\n            if (imgURL.success) {\r\n              document.execCommand(\"insertImage\", false, imgURL.data.url);\r\n            } else {\r\n              console.error(\"IMGBB is down. Tony pls get us a server\");\r\n            }\r\n          }\r\n        );\r\n      });\r\n}\r\n\r\nfunction editorHandleKeybindings({\r\n  saveDocument,\r\n  toggleWidget,\r\n  executeRichTextCommand,\r\n  updateDirtyFlag\r\n}: {\r\n  saveDocument: () => void,\r\n  toggleWidget: (widgetId: string, categoryValue?: string) => void,\r\n  executeRichTextCommand: (command: string, argument?: string) => void,\r\n  updateDirtyFlag: React.Dispatch<boolean>,\r\n}): KeyboardEventHandler<HTMLDivElement> {\r\n  return function (event) {\r\n    const { key, shiftKey, ctrlKey } = event;\r\n    let disableDefaultBehavior = false;\r\n    if (ctrlKey) {\r\n      if (!shiftKey) {\r\n        switch (key) {\r\n          case 's':\r\n            saveDocument();\r\n            disableDefaultBehavior = true;\r\n            break;\r\n          case 'b':\r\n            toggleWidget(\"bold\");\r\n            executeRichTextCommand(\"bold\");\r\n            disableDefaultBehavior = true;\r\n            break;\r\n          case 'i':\r\n            toggleWidget(\"italic\");\r\n            executeRichTextCommand(\"italic\");\r\n            disableDefaultBehavior = true;\r\n            break;\r\n          case 'u':\r\n            toggleWidget(\"underline\");\r\n            executeRichTextCommand(\"underline\");\r\n            disableDefaultBehavior = true;\r\n            break;\r\n          case '1': case '2': case '3': case '4': case '5': case '6':\r\n            toggleWidget(`h${key}`, \"heading\");\r\n            executeRichTextCommand(\"heading\", `H${key}`);\r\n            disableDefaultBehavior = true;\r\n            break;\r\n        }\r\n      } else {\r\n        console.log(\"CTRL and SHIFT\", key);\r\n        switch (key) {\r\n          case 'U':\r\n            console.log(\"unordered list\");\r\n            executeRichTextCommand(\"insertunorderedlist\");\r\n            disableDefaultBehavior = true;\r\n            break;\r\n          case 'O':\r\n            executeRichTextCommand(\"insertorderedlist\");\r\n            disableDefaultBehavior = true;\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (disableDefaultBehavior) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    } else {\r\n      updateDirtyFlag(true);\r\n    }\r\n  };\r\n}\r\n\r\nexport function RichTextEditor({\r\n  submissionHandler,\r\n  currentArticle,\r\n  updateDirtyFlag,\r\n  toggleDraftStatus\r\n}:\r\n  {\r\n    submissionHandler: (f: { name: string, content: string; }) => void,\r\n    currentArticle?: Article,\r\n    updateDirtyFlag: React.Dispatch<React.SetStateAction<boolean>>,\r\n    toggleDraftStatus: () => void,\r\n  }) {\r\n  const [initialArticleState, _] = useState(currentArticle);\r\n  const editableTitleDOMRef = useRef<HTMLHeadingElement>(null);\r\n  const editableAreaDOMRef = useRef<HTMLDivElement>(null);\r\n\r\n  document.execCommand(\"defaultParagraphSeparator\", false, \"br\");\r\n  const [widgetStates, updateWidgetState] = useState(widgets);\r\n\r\n  function saveDocument() {\r\n    if (editableAreaDOMRef.current && editableTitleDOMRef.current) {\r\n      const markdownText = renderDomAsMarkdown(editableAreaDOMRef.current);\r\n      submissionHandler({ name: (initialArticleState) ? initialArticleState.name : (editableTitleDOMRef.current.textContent || \"\"), content: markdownText });\r\n\r\n      if (initialArticleState === undefined) {\r\n        editableAreaDOMRef.current.innerHTML = renderMarkdown(preprocessMarkdown(markdownText));\r\n      }\r\n    }\r\n  }\r\n\r\n  // would only apply to a few relevant states.\r\n  function _toggleWidgetActiveState(widgetId: string, categoryValue?: string) {\r\n    updateWidgetState(toggleWidgetActiveState(widgetStates, widgetId, categoryValue));\r\n  }\r\n\r\n  function _flattenWidgetStateTypes() {\r\n    return flattenWidgetStateTypes(widgetStates);\r\n  }\r\n\r\n  function executeRichTextCommand(commandName: string, optionalArgument?: string) {\r\n    if (editableAreaDOMRef.current) {\r\n      if (commandName === \"@_insertImage\") {\r\n        console.log(\"image handling\");\r\n        const fileDialog = document.createElement(\"input\");\r\n        fileDialog.type = \"file\";\r\n        fileDialog.click();\r\n\r\n        // TODO(jerry): cleanup\r\n        fileDialog.addEventListener(\"change\", fileHandlerOnChange);\r\n      } else {\r\n        document.execCommand(commandName, false, optionalArgument);\r\n        editableAreaDOMRef.current.focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  function queryRichTextCommand(command: string, wantedValue?: boolean) {\r\n    if (wantedValue) {\r\n      return document.queryCommandValue(command);\r\n    } else {\r\n      return document.queryCommandState(command);\r\n    }\r\n  }\r\n\r\n  function synchronizeCommandStateToWidgetBar() {\r\n    updateWidgetState(\r\n      Object.keys(widgetStates).reduce(\r\n        (newWidgetState, type) => {\r\n          return dictionaryUpdateKeyNested(newWidgetState, [type, \"active\"],\r\n            (type === \"heading\") ?\r\n              () => queryRichTextCommand(type, true) :\r\n              () => queryRichTextCommand(type) ? type : null\r\n          );\r\n        }, widgetStates)\r\n    );\r\n  }\r\n\r\n  const editModeInlineStyle = {\r\n    borderColor: \"black\",\r\n    borderWidth: \"1px\",\r\n    margin: \"0.3em\",\r\n    borderStyle: \"solid\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={richWidgetBarStyle.main}> {/*requires styling*/}\r\n        {\r\n          Object.entries(_flattenWidgetStateTypes()).map(\r\n            ([widgetId, widget]) =>\r\n              <button\r\n                key={widgetId}\r\n                id={widgetId}\r\n                className={\r\n                  ((widgetStates[(widget.category !== undefined) ?\r\n                    widget.category : widgetId].active) === widgetId) ?\r\n                    richWidgetBarStyle.active : richWidgetBarStyle.button\r\n                }\r\n                onClick={\r\n                  (_) => {\r\n                    _toggleWidgetActiveState(widgetId, widget.category);\r\n                    executeRichTextCommand(widget.command, widget.argument);\r\n                  }\r\n                }>{(widget.display) ? widget.display : widget.name}\r\n              </button>\r\n          )\r\n        }\r\n      </div>\r\n      <h1\r\n        className={styles.title}\r\n        contentEditable={(initialArticleState) ? \"false\" : \"true\"}\r\n        ref={editableTitleDOMRef}\r\n      >\r\n        {(currentArticle) ? currentArticle.name : \"Edit New Title\"}\r\n      </h1>\r\n      <div style={editModeInlineStyle}>\r\n        <div\r\n          contentEditable={true}\r\n          className={articleStyles.article}\r\n          onSelect={synchronizeCommandStateToWidgetBar}\r\n          onKeyDown={editorHandleKeybindings({\r\n            saveDocument: saveDocument,\r\n            toggleWidget: _toggleWidgetActiveState,\r\n            executeRichTextCommand: executeRichTextCommand,\r\n            updateDirtyFlag: updateDirtyFlag,\r\n          })}\r\n          dangerouslySetInnerHTML={\r\n            { __html: renderMarkdown(preprocessMarkdown((initialArticleState) ? initialArticleState.content : \"Begin typing your article.\")) }\r\n          }\r\n          ref={editableAreaDOMRef}>\r\n        </div>\r\n      </div>\r\n      <br></br>\r\n      <br></br>\r\n      <div className={bottomToolbarStyle.main}>\r\n        <Button onClick={() => { toggleDraftStatus(); }}>\r\n          Toggle Draft Status\r\n        </Button>\r\n        <Button onClick={saveDocument}>\r\n          {(initialArticleState)\r\n            ? \"Save Article\"\r\n            : \"Submit Article\"}\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n}","import { useState } from 'react';\r\n\r\nimport { useAppDispatch } from 'app/hooks';\r\nimport { insertArticle, Article } from 'app/articlesSlice';\r\n\r\nimport { NoticeBanner } from './Editors/NoticeBanner';\r\nimport { RichTextEditor } from \"./Editors/RichTextEditor\";\r\nimport { TagEditor } from 'pages/Admin/TagEditor';\r\n\r\nexport default function Admin({\r\n  currentArticle\r\n}: {\r\n  currentArticle?: Article;\r\n}) {\r\n  const dispatch = useAppDispatch();\r\n  const [dirtyFlag, updateDirtyFlag] = useState(false);\r\n\r\n  const [draftStatus, updateDraftStatus] = useState(\r\n    (currentArticle === undefined)\r\n      ? false\r\n      : (currentArticle.draftStatus === undefined)\r\n        ? false\r\n        : currentArticle.draftStatus\r\n  );\r\n\r\n  function submitHandler(\r\n    input: Article,\r\n    onFinishedCallback: (input: Article) => void\r\n  ) {\r\n    dispatch(insertArticle(input));\r\n\r\n    if (onFinishedCallback) {\r\n      onFinishedCallback(input);\r\n    }\r\n  };\r\n\r\n  const submissionHandler = (\r\n    submissionData: {\r\n      name: string;\r\n      content: string;\r\n    }\r\n  ) => {\r\n    submitHandler(\r\n      { ...submissionData, draftStatus: draftStatus },\r\n      ({ name }) => {\r\n        console.log(`Article ${name} written!`);\r\n        updateDirtyFlag(false);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>{(draftStatus) ? \"DRAFT*\" : \"WILL PUBLISH ON SAVE\"}</h2>\r\n      <NoticeBanner dirtyFlag={dirtyFlag}>You have unsaved changes!</NoticeBanner>\r\n      <RichTextEditor\r\n        submissionHandler={submissionHandler}\r\n        currentArticle={currentArticle}\r\n        updateDirtyFlag={updateDirtyFlag}\r\n        toggleDraftStatus={() => updateDraftStatus(!draftStatus)}\r\n      />\r\n\r\n      {/* <TagEditor currentArticle={currentArticle}/> */}\r\n    </>\r\n  );\r\n}","import styles from 'components/Article/Article.module.scss';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { useAppSelector, useAppDispatch } from 'app/hooks';\r\nimport { deleteArticle, Article } from 'app/articlesSlice';\r\nimport { selectIsAdmin } from 'app/adminSlice';\r\n\r\nimport { preprocessMarkdown } from 'utils/preprocessMarkdown';\r\n\r\nimport MarkdownRender from \"components/Article/MarkdownRender\";\r\nimport Admin from 'pages/Admin/Admin';\r\n\r\nfunction ArticleComponent({\r\n  article\r\n}: {\r\n  article: Article;\r\n}) {\r\n  const history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n  const isAdmin = useAppSelector(selectIsAdmin);\r\n\r\n  const { name, content } = article;\r\n  const [adminEditView, updateAdminEditView] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      {\r\n        isAdmin && (\r\n          <>\r\n            <button\r\n              onClick={() => {\r\n                dispatch(deleteArticle(name));\r\n                history.push('/');\r\n              }}\r\n            >\r\n              Delete Page\r\n            </button>\r\n            <button\r\n              onClick={() => updateAdminEditView(!adminEditView)}\r\n            >\r\n              Edit This Page\r\n            </button>\r\n          </>\r\n        )\r\n      }\r\n      {(\r\n        isAdmin && adminEditView\r\n      ) ? (\r\n        <Admin\r\n          currentArticle={article}\r\n        />\r\n      ) : (\r\n        <>\r\n          <h1 className={styles.title}> {name} </h1>\r\n          <MarkdownRender className={styles.article}>\r\n            {preprocessMarkdown(content)}\r\n          </MarkdownRender>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ArticleComponent;","export default function approximateSearch(entries, key) {\r\n  let copy = [...entries].sort();\r\n\r\n  // case insensitive\r\n  function matched_characters(a, b) {\r\n    if (a !== undefined && b !== undefined) {\r\n      let count = 0;\r\n      let shorter_length = Math.min(a.length, b.length);\r\n\r\n      for (let i = 0; i < shorter_length; ++i) {\r\n        if (a[i].toUpperCase() === b[i].toUpperCase()) {\r\n          count++;\r\n        } else {\r\n          return count;\r\n        }\r\n      }\r\n\r\n      return count;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  // This will result in the `key` item percolating itself upwards, which is what we want\r\n  // related entries will show up nearby. Anything that is not directly alphabetically related is going to\r\n  // be trouble.\r\n  copy = copy.sort(\r\n    (x, y) => {\r\n      // TODO(jerry or anyone else):  remove this dependency.\r\n      let matched = [matched_characters(x.name, key), matched_characters(y.name, key)];\r\n      if (matched[0] !== 0 || matched[1] !== 0) {\r\n        // Closer matches get pushed forwards.\r\n        if (matched[0] > matched[1]) {\r\n          return -1;\r\n        } else if (matched[0] < matched[1]) {\r\n          return 1;\r\n        } else {\r\n          return -1;\r\n        }\r\n      } else {\r\n        // none of them match the characters...\r\n        // Push them to the back, they are irrelevant.\r\n        if (y !== undefined) {\r\n          if (y < key) {\r\n            return 1;\r\n          } else if (y > key) {\r\n            return 1;\r\n          } else {\r\n            // This is the key itself.\r\n            return -1;\r\n          }\r\n        }\r\n\r\n        if (x < key) {\r\n          return 1;\r\n        } else if (x > key) {\r\n          return 1;\r\n        } else {\r\n          // This is the key itself.\r\n          return -1;\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  return copy;\r\n}\r\n","import styles from 'components/Searchbar/Searchbar.module.scss';\r\nimport { useState, useRef } from 'react';\r\n\r\n\r\nexport default function Searchbar({\r\n  returnInput\r\n}: {\r\n  returnInput: (input: string) => void;\r\n}) {\r\n  const [input, setInput] = useState('');\r\n  const lastTimeTyping = useRef(new Date().getTime());\r\n  const searchbar = useRef<null | HTMLInputElement>(null);\r\n\r\n  return (\r\n    <div id={styles.searchbar}>\r\n      <input\r\n        autoFocus\r\n        type='text'\r\n        placeholder='Search'\r\n        ref={searchbar}\r\n        value={input}\r\n        onChange={(e) => {\r\n          setInput(e.target.value);\r\n          lastTimeTyping.current = new Date().getTime();\r\n          setTimeout(() => {\r\n            if (new Date().getTime() - lastTimeTyping.current >= 500)\r\n              returnInput(e.target.value);\r\n          }, 500);\r\n        }}\r\n      />\r\n      <div id={styles.clearDiv}>\r\n        <span\r\n          id={styles.clear}\r\n          className='material-icons btn'\r\n          onClick={() => {\r\n            setInput('');\r\n            searchbar.current && searchbar.current.focus();\r\n          }}\r\n        >\r\n          clear\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import styles from 'pages/Header/Search.module.scss';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useAppSelector } from 'app/hooks';\r\nimport { selectArticlesData, Article } from 'app/articlesSlice';\r\n\r\nimport { validPageLink } from 'utils/functions';\r\nimport MarkdownRender from 'components/Article/MarkdownRender';\r\n\r\nimport Searchbar from 'components/Searchbar/Searchbar';\r\n\r\nexport function renderAsParagraphs(searchResults: Article[]) {\r\n  return searchResults.map(({ name }) =>\r\n    <p key={name}>{name}</p>\r\n  );\r\n}\r\n\r\nexport function renderSearchLink(searchResults: Article[]) {\r\n  return searchResults.map(({ name, content }) => (\r\n    <Link\r\n      key={name}\r\n      to={validPageLink(name)}\r\n    >\r\n      <p>{name}</p>\r\n      <MarkdownRender className={styles.searchResult}>\r\n        {`${content.substr(0, 320).replaceAll(/(@@.*)|(@@.*@@)/g, '')}...`}\r\n      </MarkdownRender>\r\n    </Link>\r\n  ));\r\n}\r\n\r\nexport function renderHoverboxSearch(searchResults: Article[]) {\r\n  return (searchResults.length > 0) ? (\r\n    <div className={styles.hoverBox}>\r\n      {\r\n        searchResults.slice(0, 5).map(({ name }) => (\r\n          <Link\r\n            key={name}\r\n            to={validPageLink(name)}\r\n          >\r\n            <p>{name}</p>\r\n          </Link>))\r\n      }\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nfunction Search({\r\n  searchFunction, renderFunction\r\n}: {\r\n  searchFunction: (articles: Article[], input: string) => Article[];\r\n  renderFunction: (article: Article[]) => JSX.Element | null;\r\n}) {\r\n  const articlesData = useAppSelector(selectArticlesData);\r\n  const [searchResult, setSearchResult] = useState<Article[]>([]);\r\n\r\n  function returnInputCallback(input: string) {\r\n    setSearchResult(\r\n      input ? searchFunction(\r\n        articlesData.articles.map((article) => article),\r\n        input\r\n      ) : []\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles.searchbar}>\r\n      <Searchbar\r\n        returnInput={returnInputCallback}\r\n      />\r\n      {renderFunction(searchResult)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import styles from 'pages/Header/Header.module.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\r\nimport { selectIsAdmin, setIsAdmin } from 'app/adminSlice';\r\n\r\nimport approximateSearch from 'utils/search';\r\nimport Search, { renderHoverboxSearch } from 'pages/Header/Search';\r\n\r\n\r\nconst Header = () => {\r\n  const dispatch = useAppDispatch();\r\n  const isAdmin = useAppSelector(selectIsAdmin);\r\n\r\n  return (\r\n    <header id={styles.header}>\r\n      <Link to=\"/\">\r\n        <div id={styles.logoDiv}></div>\r\n      </Link>\r\n      <Search\r\n        searchFunction={approximateSearch}\r\n        renderFunction={renderHoverboxSearch}\r\n      />\r\n      <nav id={styles.navbar}>\r\n        <button className={'material-icons ' + styles.menu}>\r\n          menu\r\n        </button>\r\n        <button className={styles.links}>\r\n          <Link to='/index'>Index</Link>\r\n          {(\r\n            isAdmin\r\n          ) ? (\r\n            <>\r\n              <Link to=\"/admin\">\r\n                Create New Article\r\n            </Link>\r\n              <button\r\n                onClick={() => {\r\n                  dispatch(setIsAdmin(false));\r\n                }}\r\n              >\r\n                Logout\r\n            </button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Link to=\"/register\">Register</Link>\r\n              <Link to=\"/login\">Login</Link>\r\n            </>\r\n          )}\r\n        </button>\r\n      </nav>\r\n    </header >\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styles from 'pages/Homepage/Homepage.module.scss';\r\nimport { randomElt } from 'utils/functions';\r\nimport MarkdownRender from 'components/Article/MarkdownRender';\r\n\r\nimport { ArticlesDataProperties } from 'app/articlesSlice';\r\n\r\nfunction ArticleShowcase({ articlesData: { articles } }: ArticlesDataProperties) {\r\n  const { name, content } = (articles.length) ? randomElt(articles) : { name: \"no article name\", content: \"no articles\" };\r\n  return (\r\n    <>\r\n      <h2>Featured Article</h2>\r\n      <div className={styles.articleDisplay}>\r\n        <p>TODO what is the best way to determine a featured article?</p>\r\n        <p>Honestly, that might have to be manually audited since that depends on a lot of things.</p>\r\n      </div>\r\n      <h2>Random Article</h2>\r\n      <div className={styles.articleDisplay}>\r\n        <h2>{name}</h2>\r\n        <MarkdownRender className={styles.searchResult}>\r\n          {`${content.substr(0, 800).replaceAll(/(@@.*)|(@@.*@@)/g, '')}`}\r\n        </MarkdownRender>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Homepage({ articlesData }: ArticlesDataProperties) {\r\n  console.log(articlesData);\r\n  return (\r\n    <>\r\n      <h1>Welcome to Recyclopedia</h1>\r\n      <p>\r\n        Recyclopedia is a freely accessible wiki designed to be a complete source for\r\n        environmentally friendly actions. While it is primarily meant to be a comprehensive\r\n        source of ways to recycle items appropriately. It may also contain other methods of\r\n        sustaining an environmentally friendly lifestyle.\r\n      </p>\r\n      <br></br>\r\n      <p>This is developed by the <a href=\"https://www.projectenv.org/\"><u>Environment Project</u></a></p>\r\n      <br></br>\r\n      <ArticleShowcase articlesData={articlesData}></ArticleShowcase>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Homepage;","import styles from 'pages/Index/IndexPage.module.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useAppSelector } from 'app/hooks';\r\nimport { selectArticlesData } from 'app/articlesSlice';\r\nimport { selectIsAdmin } from 'app/adminSlice';\r\n\r\nimport { validPageLink } from 'utils/functions';\r\n\r\n\r\nfunction IndexPage() {\r\n  const articlesData = useAppSelector(selectArticlesData);\r\n  const isAdmin = useAppSelector(selectIsAdmin);\r\n\r\n  return (\r\n    <div className={styles.index}>\r\n      {\r\n        (isAdmin) ?\r\n          articlesData.articles.map(({ name, draftStatus }) => (\r\n            <p key={name} >\r\n              <Link to={validPageLink(name)}>\r\n                {(draftStatus) ? \"[DRAFT*] \" + name : name}\r\n              </Link>\r\n            </p>\r\n          ))\r\n          :\r\n          // I should technically not check for undefined, but okay.\r\n          articlesData.articles\r\n            .filter(({ draftStatus }) => draftStatus === false || draftStatus === undefined)\r\n            .map(({ name }) => (\r\n              <p key={name} >\r\n                <Link to={validPageLink(name)}>\r\n                  {name}\r\n                </Link>\r\n              </p>\r\n            ))\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IndexPage;\r\n","import styles from 'App.module.scss';\r\nimport { useEffect } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\r\nimport { initApi, selectStatus, selectArticlesData } from 'app/articlesSlice';\r\nimport { selectIsAdmin, setIsAdmin } from 'app/adminSlice';\r\n\r\nimport { Secrets } from 'secrets';\r\nimport Article from \"components/Article/Article\";\r\n\r\nimport Header from 'pages/Header/Header';\r\nimport Homepage from \"pages/Homepage/Homepage\";\r\nimport IndexPage from \"pages/Index/IndexPage\";\r\nimport Admin from \"pages/Admin/Admin\";\r\nimport { validPageLink } from 'utils/functions';\r\n\r\nimport { loginWith } from 'app/articlesSlice';\r\n\r\nfunction RegisterPage(_: {}) {\r\n  return (\r\n    <>\r\n      <h1>Register a New Account (TODO)</h1>\r\n      <p>asdf</p>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction LoginPage(_: {}) {\r\n  // someone do this later\r\n  const dispatch = useAppDispatch();\r\n  useEffect(\r\n    function () {\r\n      const userName = prompt(\"Enter Username\");\r\n      const password = prompt(\"Enter Password\");\r\n\r\n      (async function () {\r\n        if (userName && password) {\r\n          try {\r\n            const loginResult = await loginWith({ email: userName, password });\r\n            if (loginResult) {\r\n              console.log(loginResult.customData);\r\n              dispatch(setIsAdmin(loginResult.customData.status === \"admin\"));\r\n            }\r\n          } catch (error) {\r\n            console.log(error);\r\n            alert(\"Unrecognized user credentials.\");\r\n          }\r\n        }\r\n      })();\r\n    },\r\n    [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Login With Your Account!</h1>\r\n      <Redirect to=\"/\"></Redirect>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const articlesData = useAppSelector(selectArticlesData);\r\n  const isAdmin = useAppSelector(selectIsAdmin);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n\r\n      <main id={styles.main}>\r\n        <Switch>\r\n          <Route exact path='/index'>\r\n            <IndexPage />\r\n          </Route>\r\n          <Route exact path='/'>\r\n            <Homepage articlesData={articlesData} />\r\n          </Route>\r\n          <Route exact path='/admin'>\r\n            {\r\n              isAdmin\r\n                ? <Admin currentArticle={undefined} />\r\n                : <Redirect to='/' />\r\n            }\r\n          </Route>\r\n\r\n          {/*\r\n            For obvious reasons getting ALL the articles is kind of dumb. I believe it\r\n            would be better if we fetched articles on the 404 path.\r\n\r\n            Basically we don't generate the routes here. Rather we kind of hook them up on demand.\r\n\r\n            So the index is still generated with links, and only as much as we need to display a page.\r\n\r\n            Basically that means I have to do something like:\r\n\r\n            bucketSize  = the amount of things we consider to be on a \"page\"\r\n            bucketIndex = the \"page\"\r\n            getArticleInformationPageful(bucketSize: number, bucketIndex: number);\r\n\r\n            IE:\r\n            It's like:\r\n              getAllArticles().slice(bucketIndex * bucketSize, (bucketIndex+1) * bucketSize);\r\n              but since it's on the server side, it reduces the load to send all of them.\r\n\r\n            Then in the wildcard route we simply try to make the article component request the article\r\n            in the URL. If it can't do it, then we just display normal 404.\r\n\r\n            We only have 1 million free api requests from MongoDB so this might ironically be worse since\r\n            each article will take a request from the API (even though it uses less storage space on the\r\n            client side).\r\n          */}\r\n\r\n          {((isAdmin) ?\r\n            articlesData.articles :\r\n            articlesData.articles.filter((article) => !article.draftStatus))\r\n            .map((article) =>\r\n              <Route key={article.name} exact path={validPageLink(article.name)}>\r\n                <Article article={article} />\r\n              </Route>\r\n            )}\r\n          <Route path=\"/login\">\r\n            <LoginPage />\r\n          </Route>\r\n          <Route path=\"/register\">\r\n            <RegisterPage />\r\n          </Route>\r\n          <Route path='*'>404</Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\n/*\r\n  I said in store.ts that we should basically have another line of code\r\n  around here.\r\n*/\r\nfunction InitializingApp() {\r\n  const dispatch = useAppDispatch();\r\n  useEffect(() => {\r\n    dispatch(initApi(Secrets.RECYCLOPEDIA_APPLICATION_ID));\r\n\r\n    /*\r\n    Something like this.\r\n\r\n    const {userName, password} = useAppSelector(SavedLoggedInCredentials);\r\n    loginWith(userName, password);\r\n    */\r\n  }, [dispatch]);\r\n\r\n  const status = useAppSelector(selectStatus);\r\n\r\n  if (status === 'failed')\r\n    return <p>MongoDB is probably offline. Crap.</p>;\r\n\r\n  if (status === 'succeed')\r\n    return <App />;\r\n\r\n  return <p>Please wait! Loading Recyclopedia...</p>;\r\n}\r\n\r\nexport default InitializingApp;\r\n","import 'index.css';\r\nimport 'styles/global.scss';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor } from 'app/store';\r\n\r\nimport App from 'App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate persistor={persistor}>\r\n        <BrowserRouter basename='/recyclopedia'>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Header_btn__ixp2s\",\"header\":\"Header_header__2C1Vn\",\"menu\":\"Header_menu__2W5N2\",\"navbar\":\"Header_navbar__1qBL4\",\"logoDiv\":\"Header_logoDiv__3T1yS\",\"links\":\"Header_links__392xQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Article_title__3V4iY\",\"article\":\"Article_article__1_qWg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropOut\":\"NoticeBanner_dropOut__27qEQ\",\"dropIn\":\"NoticeBanner_dropIn__QXAik\",\"drop-in\":\"NoticeBanner_drop-in__1yqzX\",\"main\":\"NoticeBanner_main__2YpUO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"richWidgetBar_active__1pcNx\",\"button\":\"richWidgetBar_button__N1sVj\",\"main\":\"richWidgetBar_main__14KIW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Search_searchbar__2GxSQ\",\"hoverBox\":\"Search_hoverBox__3V1C5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__2o8go\",\"clearDiv\":\"Searchbar_clearDiv__3C4Bk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"articleDisplay\":\"Homepage_articleDisplay__3zqNX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__yxyJm\",\"google\":\"Button_google__4WBul\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"App_btn__226iN\",\"main\":\"App_main__3HmsK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"bottomToolbar_main__2k-V0\"};"],"sourceRoot":""}